<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: active directory | Bob 學習筆記]]></title>
  <link href="http://blog.poyi.tw/blog/categories/active-directory/atom.xml" rel="self"/>
  <link href="http://blog.poyi.tw/"/>
  <updated>2016-03-05T14:12:27+08:00</updated>
  <id>http://blog.poyi.tw/</id>
  <author>
    <name><![CDATA[Bob (PoYi)]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[[ASP.NET] 存取AD網域]]></title>
    <link href="http://blog.poyi.tw/blog/2013/09/12/aspnet-access-to-ad-domain/"/>
    <updated>2013-09-12T01:27:00+08:00</updated>
    <id>http://blog.poyi.tw/blog/2013/09/12/aspnet-access-to-ad-domain</id>
    <content type="html"><![CDATA[<h2>透過AD網域來存取帳號資料</h2>

<h2>查詢資料</h2>

<pre><code>string QueryString = "LDAP://網域";
DirectoryEntry de = new DirectoryEntry(QueryString,adminAccount,adminPassword);
DirectorySearcher ds = new DirectorySearcher(de);
SearchResultCollection Results = null;

// 設定查詢條件：依姓名及工號查詢
ds.Filter = @"(&amp;(samaccountname=" + employeeName + ")(Description=" + employeeNo + "))";
// 將查詢結果放入Results
Results = ds.FindAll();

foreach (SearchResult result in Results)
{
    if (result.Properties["description"].Count &gt; 0)
    {
        // 透過AD裡的屬性「description」，取得工號
        string resultNo = result.Properties["description"][0].ToString();
        Response.Write(resultNo);
        Response.Write("&lt;br&gt;");
    }
}
ds.Dispose(); // 釋放資源
de.Dispose();
</code></pre>

<h2>修改指定帳號的屬性值</h2>

<pre><code>string QueryString = "LDAP://"+ userLDAP;
DirectoryEntry de = new DirectoryEntry(QueryString, adminAccount,adminPassword);

de.Properties["TelephoneNumber"].Value = 123;     

// 停用此帳號：userAccountControl = 514 
de.Properties["userAccountControl"].Value = 514;

// 重設密碼
de.Invoke("SetPassword", newPassword);

de.CommitChanges();
de.Close();
</code></pre>

<h2>刪除帳號</h2>

<pre><code>string QueryString = LDAP://" + userLDAP;
DirectoryEntry user = new DirectoryEntry(QueryString, adminAccount, adminPassword);
// 找上一層
DirectoryEntry ou = user.Parent;
// 再回去刪它
ou.Children.Remove(user);
ou.CommitChanges();
</code></pre>

<p>基本屬性KEY跟VALUE可以在AD裡面找到
<img src="http://user-image.logdown.io/user/2740/blog/2734/post/138560/iH5dxsHMS6SoXINR2EX2_2013-9-15%20%E4%B8%8B%E5%8D%88%2001-58-35.jpg" alt="2013-9-15 下午 01-58-35.jpg" /></p>

<p>Reference:
<a href="http://www.dotblogs.com.tw/yc421206/archive/2010/02/07/13510.aspx">http://www.dotblogs.com.tw/yc421206/archive/2010/02/07/13510.aspx</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[ASP.NET] Reset Password in Active Directory]]></title>
    <link href="http://blog.poyi.tw/blog/2013/02/14/aspnet-reset-password-in-active-directory/"/>
    <updated>2013-02-14T12:47:00+08:00</updated>
    <id>http://blog.poyi.tw/blog/2013/02/14/aspnet-reset-password-in-active-directory</id>
    <content type="html"><![CDATA[<p>重設密碼建議還是用LDAP去抓USER，以免抓錯人之類的</p>

<pre><code class="C# Reset Password in Active Directory">DirectoryEntry userDirEntry = new DirectoryEntry("LDAP://" + ldapStr, adminAccount, adminPassword);
userDirEntry.Invoke("SetPassword", CreateRandomPassword(8));    // 重設新密碼
userDirEntry.CommitChanges();


userDirEntry.Properties["pwdLastSet"].Value = 0; // 下次登入會強制要求改密碼
userDirEntry.CommitChanges();

userDirEntry.Close();
</code></pre>

<pre><code class="C# Generate Random Password (Winform)">
public static string CreateRandomPassword(int passwordLength) 
{
      string allowedChars = "abcdefghijkmnprstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ23456789~!@#$%^&amp;*()_+?";
      char[] chars = new char[passwordLength];
      for (int i = 0; i &lt; passwordLength; i++)
      {
            chars[i] = allowedChars[rd.Next(0, allowedChars.Length)];   
            // random.next(min,max) =&gt;int
      }
      string strPwd = new string(chars);

      while (!((Regex.IsMatch(strPwd, "[0-9]")) &amp;&amp; 
      (Regex.IsMatch(strPwd, "[a-z]")) &amp;&amp; 
      (Regex.IsMatch(strPwd, "[A-Z]")) &amp;&amp; 
      (Regex.IsMatch(strPwd, @"[\W]"))))    
      // \w  [a-zA-Z0-9_]  , \W ![a-zA-Z0-9_]
      {
            strPwd = CreateRandomPassword(8);   
      }

      return strPwd;
}

// 靜態避免短時期內產生相同亂數
static Random rd = new Random(GetRandomSeed());
static int GetRandomSeed()
{
      byte[] bytes = new byte[4];
      System.Security.Cryptography.RNGCryptoServiceProvider rng = 
      new System.Security.Cryptography.RNGCryptoServiceProvider();
      rng.GetBytes(bytes);
      return BitConverter.ToInt32(bytes, 0);
}
</code></pre>
]]></content>
  </entry>
  
</feed>
