<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: rails | Bob 學習筆記]]></title>
  <link href="http://blog.poyi.tw/blog/categories/rails/atom.xml" rel="self"/>
  <link href="http://blog.poyi.tw/"/>
  <updated>2016-04-05T15:33:10+08:00</updated>
  <id>http://blog.poyi.tw/</id>
  <author>
    <name><![CDATA[Bob (PoYi)]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[[Rails] 各種update method]]></title>
    <link href="http://blog.poyi.tw/blog/2015/07/11/rails-various-update-methods/"/>
    <updated>2015-07-11T17:16:55+08:00</updated>
    <id>http://blog.poyi.tw/blog/2015/07/11/rails-various-update-methods</id>
    <content type="html"><![CDATA[<h2>正規Rails的更新 - update</h2>

<p>會觸發validation、callback、也會更新updated_at</p>

<pre><code class="Ruby update 寫法 (for 單筆)">&gt; Comment.last.update(message: 'bbb')
   (0.1ms)  begin transaction
  SQL (0.4ms)  UPDATE "comments" SET "message" = ?, "updated_at" = ? WHERE "comments"."id" = ?  [["message", "bbb"], ["updated_at", "2015-07-11 09:42:02.303661"], ["id", 200]]
   (9.1ms)  commit transaction
 =&gt; true
</code></pre>

<h2>相當於直接下SQL的更新 - update_columns, update_all</h2>

<p>而 update_columns 及 update_all 是直接幫你下SQL更新欄位，會忽視Rails的validation，也沒有callback，updated_at也不會更新。所以最好是很確定要更新的值沒問題再使用這類語法。</p>

<pre><code class="Ruby update_columns 寫法 (for 單筆)">&gt; Comment.where(:id =&gt; 200).first.update_columns(message: 'bbbbb', post_id: 3)
  SQL (9.2ms)  UPDATE "comments" SET "message" = 'bbbbb', "post_id" = 3 WHERE "comments"."id" = ?  [["id", 200]]

# update_column 跟 update_columns 相同，只是傳入值key跟value必須是string，並用逗點分隔
&gt; Comment.where(:id =&gt; 200).first.update_column('message' ,'bbbbb')
</code></pre>

<pre><code class="Ruby update_all 寫法 (for relation)">&gt; Comment.where(:id =&gt; 200).update_all(message: 'aaaaaaaaaa', post_id: 10)
  SQL (9.2ms)  UPDATE "comments" SET "message" = 'aaaaaaaaaa', "post_id" = 10 WHERE "comments"."id" = ?  [["id", 200]]
 =&gt; 1
</code></pre>

<h2>其他 - update_attribute</h2>

<p>忽視validation，有callback，會更新updated_at</p>

<pre><code class="Ruby update_attribute 寫法 (for 單筆)">&gt; Comment.last.update_attribute('message' ,'bbbbb')
   (0.1ms)  begin transaction
  SQL (0.4ms)  UPDATE "comments" SET "message" = ?, "updated_at" = ? WHERE "comments"."id" = ?  [["message", "bbbbb"], ["updated_at", "2015-07-11 09:45:55.190026"], ["id", 200]]
   (8.5ms)  commit transaction
 =&gt; true
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Rails] AJAX render errors in json]]></title>
    <link href="http://blog.poyi.tw/blog/2015/06/12/rails-ajax-render-error-in-json/"/>
    <updated>2015-06-12T19:02:48+08:00</updated>
    <id>http://blog.poyi.tw/blog/2015/06/12/rails-ajax-render-error-in-json</id>
    <content type="html"><![CDATA[<pre><code class="javascript new.html.erb">$.ajax({
  url: URL,
  async:false,
  data:{
    amount: 100,
  },
  dataType:'json',
  method:'post',
  success:function(data){
    // do success things
  },
  error:function(xhr){
    var errors = $.parseJSON(xhr.responseText).errors
    alert(errors);
  }
);
</code></pre>

<pre><code class="ruby orders_controller.rb ">def create
  if amount &lt; 100
    render :json =&gt; { :errors =&gt; "金額不足" }, :status =&gt; 422
    return 
  end
end
</code></pre>

<p>當錯誤回傳時，使用422(Unprocessable Entity)來做error handling</p>

<p>Reference:</p>

<p><a href="http://travisjeffery.com/b/2012/04/rendering-errors-in-json-with-rails/">http://travisjeffery.com/b/2012/04/rendering-errors-in-json-with-rails/</a>
<a href="http://stackoverflow.com/questions/16133923/400-vs-422-response-to-post-of-data">http://stackoverflow.com/questions/16133923/400-vs-422-response-to-post-of-data</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Ruby] 匯出txt檔]]></title>
    <link href="http://blog.poyi.tw/blog/2014/05/06/ruby-txt-file/"/>
    <updated>2014-05-06T22:00:59+08:00</updated>
    <id>http://blog.poyi.tw/blog/2014/05/06/ruby-txt-file</id>
    <content type="html"><![CDATA[<h4>需要在正式環境上撈大量特定資料下來，又不想dump整份database，用ORM來把資料匯出成txt就很方便了</h4>

<pre><code class="ruby 寫入txt">all_users_mobile = User.where('mobile like ?', '+8869%').select(:mobile).uniq

# 建立txt並給予寫入權限
file = File.open('mobile_tw.txt' , 'w')

all_users_mobile.each do |mobile|
  file.puts mobile # 一行一筆mobile
end

# 記得要關掉
file.close
</code></pre>

<pre><code class="ruby 讀取txt"># 讀取txt
file = File.open('mobile_tw.txt' , 'r')

100.times do
  file.readline
end
</code></pre>

<p>Reference:</p>

<p><a href="http://ruby-doc.org/core-2.1.4/File.html">http://ruby-doc.org/core-2.1.4/File.html</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Ruby] 匯出批次csv檔]]></title>
    <link href="http://blog.poyi.tw/blog/2014/05/06/ruby-csv-file/"/>
    <updated>2014-05-06T21:14:00+08:00</updated>
    <id>http://blog.poyi.tw/blog/2014/05/06/ruby-csv-file</id>
    <content type="html"><![CDATA[<p>讀取或寫入csv在ruby都蠻方便的，只是編碼或格式要稍微注意一下</p>

<h2>匯出csv</h2>

<pre><code class="ruby">header = ['name','money','age']
body = ['ruby','1000','18']
</code></pre>

<pre><code class="ruby export_to_csv_string 匯出csv的string格式再利用send_data下載">  head = 'EF BB BF'.split(' ').map{|a|a.hex.chr}.join() # 加入BOM，解決excel中文亂碼


  csv_string = CSV.generate(csv = head) do |csv|
    csv &lt;&lt; header
    csv &lt;&lt; body
  end

  # &gt; csv_string.encoding 執行這句會發現預設編碼為ACSII
  csv_string.force_encoding('big5')
  # BOM也可以這樣加 csv_string = "\xEF\xBB\xBF#{csv_string}"  
  # 若不需要調整格式就直接下載
  send_data csv_string
</code></pre>

<pre><code class="ruby export_to_csv 直接匯出檔案"> require 'csv'
 CSV.open("export.csv","w") do |csv|
   csv &lt;&lt; header
   csv &lt;&lt; body
 end
</code></pre>

<h2>半形轉全形</h2>

<p>在某些情況會需要轉出全形字元，照理說不用才對，<del>可能是因為合作對方的系統太爛</del>
其實也不太確定怎解，我單純用硬幹的方式
<figure class='code'><figcaption><span>convert_to_wide_word 大小寫英文數字轉全形字元</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">convert_to_wide_word</span><span class="p">(</span><span class="n">text</span><span class="p">)</span>
</span><span class='line'>  <span class="n">text</span><span class="o">.</span><span class="n">gsub</span><span class="p">(</span><span class="sr">/[a-v]/</span><span class="p">){</span><span class="o">|</span><span class="n">a</span><span class="o">|</span><span class="p">(</span><span class="n">a</span><span class="o">.</span><span class="n">ord</span> <span class="o">+</span> <span class="mi">41608</span><span class="p">)</span><span class="o">.</span><span class="n">chr</span><span class="p">(</span><span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">big5</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;)</span><span class="o">.</span><span class="n">encode</span><span class="p">(</span><span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">utf</span><span class="o">-</span><span class="mi">8</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;)}</span>
</span><span class='line'>    <span class="o">.</span><span class="n">gsub</span><span class="p">(</span><span class="sr">/[w-z]/</span><span class="p">){</span><span class="o">|</span><span class="n">a</span><span class="o">|</span><span class="p">(</span><span class="n">a</span><span class="o">.</span><span class="n">ord</span> <span class="o">+</span> <span class="mi">41673</span><span class="p">)</span><span class="o">.</span><span class="n">chr</span><span class="p">(</span><span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">big5</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;)</span><span class="o">.</span><span class="n">encode</span><span class="p">(</span><span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">utf</span><span class="o">-</span><span class="mi">8</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;)}</span>
</span><span class='line'>    <span class="o">.</span><span class="n">gsub</span><span class="p">(</span><span class="sr">/[A-Z]/</span><span class="p">){</span><span class="o">|</span><span class="n">a</span><span class="o">|</span><span class="p">(</span><span class="n">a</span><span class="o">.</span><span class="n">ord</span> <span class="o">+</span> <span class="mi">41614</span><span class="p">)</span><span class="o">.</span><span class="n">chr</span><span class="p">(</span><span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">big5</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;)</span><span class="o">.</span><span class="n">encode</span><span class="p">(</span><span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">utf</span><span class="o">-</span><span class="mi">8</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;)}</span>
</span><span class='line'>    <span class="o">.</span><span class="n">gsub</span><span class="p">(</span><span class="sr">/[0-9]/</span><span class="p">){</span><span class="o">|</span><span class="n">a</span><span class="o">|</span><span class="p">(</span><span class="n">a</span><span class="o">.</span><span class="n">ord</span> <span class="o">+</span> <span class="mi">41599</span><span class="p">)</span><span class="o">.</span><span class="n">chr</span><span class="p">(</span><span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">big5</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;)</span><span class="o">.</span><span class="n">encode</span><span class="p">(</span><span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">utf</span><span class="o">-</span><span class="mi">8</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;)}</span>
</span><span class='line'><span class="k">end</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;convert_to_wide_word(&amp;ldquo;0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ&amp;rdquo;)</span>
</span><span class='line'><span class="sr"> =&gt; &amp;ldquo;０１２３４５６７８９ａｂｃｄｅｆｇｈｉｊｋｌｍｎｏｐｑｒｓｔｕｖｗｘｙｚＡＢＣＤＥＦＧＨＩＪＫＬ</span>
</span><span class='line'><span class="sr"> ＭＮＯＰＱＲＳＴＵＶＷＸＹＺ&amp;rdquo;</span>
</span></code></pre></td></tr></table></div></figure>
匯出匯入csv也可以試試FasterCSV這個gem</p>

<p>Reference:</p>

<p><a href="http://www.sitepoint.com/guide-ruby-csv-library-part/">http://www.sitepoint.com/guide-ruby-csv-library-part/</a></p>

<p><a href="http://blog.inheart.tw/2013/09/rubyraisl-csv-excel.html">http://blog.inheart.tw/2013/09/rubyraisl-csv-excel.html</a></p>

<p><a href="http://salayhin.wordpress.com/2014/05/10/export-csv-file-from-rails-console/">http://salayhin.wordpress.com/2014/05/10/export-csv-file-from-rails-console/</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Mac] Ruby on Rails 基本環境建置]]></title>
    <link href="http://blog.poyi.tw/blog/2014/01/17/rails-mac-os-environment-build/"/>
    <updated>2014-01-17T12:47:00+08:00</updated>
    <id>http://blog.poyi.tw/blog/2014/01/17/rails-mac-os-environment-build</id>
    <content type="html"><![CDATA[<p>是說終於買了mac，省去開箱文趕緊把環境用好來繼續練習ROR!!
但使用上還是有一點不習慣，會覺得有些地方也蠻不人性化，但相對穩定就是了</p>

<h2>以下環境為OS X 10.9.1</h2>

<p>1.安裝xcode-select
Command line tool已經獨立出來，不需要安裝XCode了
<code>bash terminal
$ xcode-select --install
</code>
<img src="http://user-image.logdown.io/user/2740/blog/2734/post/176032/wrVy25UMQkeJEnuNKSEq_%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%202014-01-17%20%E4%B8%8B%E5%8D%889.07.40.png" alt="螢幕快照 2014-01-17 下午9.07.40.png" /></p>

<p>如果安裝失敗的話也可以到<a href="https://developer.apple.com/downloads/index.action?q=xcode">這裡</a>下載
<img src="http://user-image.logdown.io/user/2740/blog/2734/post/176032/umDZbcPSNWfhQ0VNDr7l_%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%202014-01-17%20%E4%B8%8B%E5%8D%8810.01.05.png" alt="螢幕快照 2014-01-17 下午10.01.05.png" /></p>

<p>2.安裝homebrew
<code>bash terminal
$ ruby -e "$(curl -fsSL https://raw.github.com/mxcl/homebrew/go/install)"
</code></p>

<p>3.安裝所需要的工具
<code>bash terminal
$ brew install git
</code></p>

<p>4.安裝RVM
<code>bash terminal
$ curl -L https://get.rvm.io | bash -s stable
</code>
5.透過RVM來安裝RUBY
<code>bash terminal
$ rvm install ruby
</code>
6.透過RVM來安裝RubyGems
<code>bash terminal
$ rvm rubygems current
</code>
7.安裝Rails
<code>bash terminal
$ gem install rails
</code></p>

<hr />

<p>XCode:官方提供的一個IDE，主要用來開發IOS APP，不過它也包含了一些開發其他語言所需的環境
Homebrew: OSX 套件管理工具
RVM (Ruby Version Manager):Ruby版本管理工具，便於切換不同版本</p>

<p>Reference:</p>

<p><a href="http://www.computersnyou.com/2025/2013/06/install-command-line-tools-in-osx-10-9-mavericks-how-to/">http://www.computersnyou.com/2025/2013/06/install-command-line-tools-in-osx-10-9-mavericks-how-to/</a>
<a href="http://www.slideshare.net/marsz330/ruby-on-rails-for-mac">http://www.slideshare.net/marsz330/ruby-on-rails-for-mac</a></p>
]]></content>
  </entry>
  
</feed>
