<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: csv | Bob 學習筆記]]></title>
  <link href="http://blog.poyi.tw/blog/categories/csv/atom.xml" rel="self"/>
  <link href="http://blog.poyi.tw/"/>
  <updated>2015-04-18T16:21:39+08:00</updated>
  <id>http://blog.poyi.tw/</id>
  <author>
    <name><![CDATA[Bob (PoYi)]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[[ruby] 匯出批次csv檔]]></title>
    <link href="http://blog.poyi.tw/blog/2014/05/06/ruby-csv-file/"/>
    <updated>2014-05-06T21:14:00+08:00</updated>
    <id>http://blog.poyi.tw/blog/2014/05/06/ruby-csv-file</id>
    <content type="html"><![CDATA[<p>讀取或寫入csv在ruby都蠻方便的，只是編碼或格式要稍微注意一下</p>

<h2>匯出csv</h2>

<pre><code class="ruby">header = ['name','money','age']
body = ['ruby','1000','18']
</code></pre>

<pre><code class="ruby export_to_csv_string 匯出csv的string格式再利用send_data下載">  head = 'EF BB BF'.split(' ').map{|a|a.hex.chr}.join() # 加入BOM，解決excel中文亂碼


  csv_string = CSV.generate(csv = head) do |csv|
    csv &lt;&lt; header
    csv &lt;&lt; body
  end

  # &gt; csv_string.encoding 執行這句會發現預設編碼為ACSII
  csv_string.force_encoding('big5')
  # BOM也可以這樣加 csv_string = "\xEF\xBB\xBF#{csv_string}"  
  # 若不需要調整格式就直接下載
  send_data csv_string
</code></pre>

<pre><code class="ruby export_to_csv 直接匯出檔案"> require 'csv'
 CSV.open("export.csv","w") do |csv|
   csv &lt;&lt; header
   csv &lt;&lt; body
 end
</code></pre>

<h2>半形轉全形</h2>

<p>在某些情況會需要轉出全形字元，照理說不用才對，<del>可能是因為合作對方的系統太爛</del>
其實也不太確定怎解，我單純用硬幹的方式
&#8220;`ruby convert_to_wide_word 大小寫英文數字轉全形字元
def self.convert_to_wide_word(text)
  text.gsub(/[a-v]/){|a|(a.ord + 41608).chr(&lsquo;big5&rsquo;).encode(&lsquo;utf-8&rsquo;)}
    .gsub(/[w-z]/){|a|(a.ord + 41673).chr(&lsquo;big5&rsquo;).encode(&lsquo;utf-8&rsquo;)}
    .gsub(/[A-Z]/){|a|(a.ord + 41614).chr(&lsquo;big5&rsquo;).encode(&lsquo;utf-8&rsquo;)}
    .gsub(/[0-9]/){|a|(a.ord + 41599).chr(&lsquo;big5&rsquo;).encode(&lsquo;utf-8&rsquo;)}
end</p>

<p>convert_to_wide_word(&ldquo;0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ&rdquo;)
 => &ldquo;０１２３４５６７８９ａｂｃｄｅｆｇｈｉｊｋｌｍｎｏｐｑｒｓｔｕｖｗｘｙｚＡＢＣＤＥＦＧＨＩＪＫＬ
 ＭＮＯＰＱＲＳＴＵＶＷＸＹＺ&rdquo;
&#8220;`
匯出匯入csv也可以試試FasterCSV這個gem</p>

<p>Reference:</p>

<p><a href="http://www.sitepoint.com/guide-ruby-csv-library-part/">http://www.sitepoint.com/guide-ruby-csv-library-part/</a></p>

<p><a href="http://blog.inheart.tw/2013/09/rubyraisl-csv-excel.html">http://blog.inheart.tw/2013/09/rubyraisl-csv-excel.html</a></p>

<p><a href="http://salayhin.wordpress.com/2014/05/10/export-csv-file-from-rails-console/">http://salayhin.wordpress.com/2014/05/10/export-csv-file-from-rails-console/</a></p>
]]></content>
  </entry>
  
</feed>
