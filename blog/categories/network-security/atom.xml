<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: network security | Bob 學習筆記]]></title>
  <link href="http://blog.poyi.tw/blog/categories/network-security/atom.xml" rel="self"/>
  <link href="http://blog.poyi.tw/"/>
  <updated>2015-04-18T16:44:40+08:00</updated>
  <id>http://blog.poyi.tw/</id>
  <author>
    <name><![CDATA[Bob (PoYi)]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[[ASP.NET] 資安基本概念]]></title>
    <link href="http://blog.poyi.tw/blog/2013/09/04/network-attacks/"/>
    <updated>2013-09-04T01:25:00+08:00</updated>
    <id>http://blog.poyi.tw/blog/2013/09/04/network-attacks</id>
    <content type="html"><![CDATA[<p>以往都是寫供內部使用的網站，也沒想過有什麼資安的問題…
也就是說資安這一環，幾乎是無知的狀態…</p>

<hr />

<h1>SQL Injection</h1>

<p><strong>將字串中夾帶SQL指令，讓SERVER認為是正常指令而執行</strong></p>

<h2>ASP.NET 防範方法</h2>

<ol>
<li>避免直接將使用者輸入的資料作為SQL指令；或是利用SQLParameter來處理參數</li>
<li>將設定customErrors:On，至少出錯時不會show出程式碼</li>
<li>設定專屬SQL帳號及必要權限，避免使用sa</li>
<li>其他&hellip;</li>
</ol>


<hr />

<h1>XSS</h1>

<p><strong>－通常是指對方將有害程式碼惡意嵌入網頁當中，使得其他人連進此網頁時會受到影響；或是對方竊取更高的權限、Cookie等等…；(常見的為JavaScript)</strong></p>

<h2>ASP.NET 防範方法</h2>

<ol>
<li>盡量保持ValidateRequest為啟用</li>
<li>進行Html Encode(前端或後端)</li>
<li>其他&hellip;必須防範所有有機會寫入Html tag的地方</li>
</ol>


<hr />

<p>Reference:
<a href="http://anti-hacker.blogspot.tw/2008/01/xss.html">http://anti-hacker.blogspot.tw/2008/01/xss.html</a>
<a href="http://zh.wikipedia.org/wiki/%E8%B7%A8%E7%B6%B2%E7%AB%99%E6%8C%87%E4%BB%A4%E7%A2%BC">http://zh.wikipedia.org/wiki/%E8%B7%A8%E7%B6%B2%E7%AB%99%E6%8C%87%E4%BB%A4%E7%A2%BC</a>
<a href="https://www.google.com.tw/#q=csrf">https://www.google.com.tw/#q=csrf</a>
<a href="http://blog.darkthread.net/blogs/darkthreadtw/archive/2008/05/07/are-your-website-naked.aspx">http://blog.darkthread.net/blogs/darkthreadtw/archive/2008/05/07/are-your-website-naked.aspx</a></p>
]]></content>
  </entry>
  
</feed>
