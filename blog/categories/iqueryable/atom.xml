<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: iqueryable | Bob 學習筆記]]></title>
  <link href="http://blog.poyi.tw/blog/categories/iqueryable/atom.xml" rel="self"/>
  <link href="http://blog.poyi.tw/"/>
  <updated>2015-04-21T21:10:51+08:00</updated>
  <id>http://blog.poyi.tw/</id>
  <author>
    <name><![CDATA[Bob (PoYi)]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[[C#] IEnumerable vs IQueryable]]></title>
    <link href="http://blog.poyi.tw/blog/2013/09/30/c-ienumerable/"/>
    <updated>2013-09-30T14:34:00+08:00</updated>
    <id>http://blog.poyi.tw/blog/2013/09/30/c-ienumerable</id>
    <content type="html"><![CDATA[<p>在linq的使用上，IEnumerable<T>是不可或缺的泛型介面
像是foreach迴圈就是利用IEnumerable的特性(MoveNext)來實現逐一檢查。</p>

<p>而IQueryable<T>又繼承了IEnumerable<T>&hellip;</p>

<p>兩者的差別從概念上來說：
<strong>IEnumerable<T></strong>:先將查詢的值取出，再一層一層做篩選。
<strong>IQueryable<T></strong>:把全部Linq翻成T-SQL，直到真正要使用時才去執行。</p>

<pre><code class="c# IEnumerable">// list1
IEnumerable&lt;Employee&gt; list1 = myDB.Employees.Where(p =&gt; p.Name.StartsWith("S"));
list1 = list1.Take&lt;Employee&gt;(10); 

// list2
IQueryable&lt;Employee&gt; list2 = myDB.Employees.Where(p =&gt; p.Name.StartsWith("S"));
list2 = list2.Take&lt;Employee&gt;(10); 
</code></pre>

<pre><code class="SQL SQL">// list1
SELECT [t0].[EmpID], [t0].[EmpName], [t0].[Salary] FROM [Employee] AS [t0]
WHERE [t0].[EmpName] LIKE @p0

// list2
SELECT TOP 10 [t0].[EmpID], [t0].[EmpName], [t0].[Salary] FROM [Employee] AS [t0]
WHERE [t0].[EmpName] LIKE @p0
</code></pre>

<p>可以看到 IQueryable 在執行時直接向SQL要求TOP 10；而 IEnumerable 則是把全部撈出來再做一些篩選。</p>

<p>Reference:
<a href="http://msdn.microsoft.com/zh-tw/library/ttw7t8t6.ASPX">http://msdn.microsoft.com/zh-tw/library/ttw7t8t6.ASPX</a>
<a href="http://www.cnblogs.com/seebook/archive/2009/02/21/1395310.html">http://www.cnblogs.com/seebook/archive/2009/02/21/1395310.html</a>
<a href="http://www.dotnet-tricks.com/Tutorial/linq/I8SY160612-IEnumerable-VS-IQueryable.html">http://www.dotnet-tricks.com/Tutorial/linq/I8SY160612-IEnumerable-VS-IQueryable.html</a></p>
]]></content>
  </entry>
  
</feed>
