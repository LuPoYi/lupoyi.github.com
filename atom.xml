<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Bob 學習筆記]]></title>
  <link href="http://blog.poyi.tw/atom.xml" rel="self"/>
  <link href="http://blog.poyi.tw/"/>
  <updated>2016-07-19T19:00:25+08:00</updated>
  <id>http://blog.poyi.tw/</id>
  <author>
    <name><![CDATA[Bob (PoYi)]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[[Ubuntu] 自行簽署的SSL憑證及Nginx設定]]></title>
    <link href="http://blog.poyi.tw/blog/2016/07/14/ssl-certificate-nginx-ubuntu-config/"/>
    <updated>2016-07-14T20:00:55+08:00</updated>
    <id>http://blog.poyi.tw/blog/2016/07/14/ssl-certificate-nginx-ubuntu-config</id>
    <content type="html"><![CDATA[<p>自簽SSL單純只是讓資料傳送時加密，避免使用明文傳輸資料而被直接監聽到封包</p>

<p>要上Production的話還是必須找SSL服務來簽</p>

<figure class='code'><figcaption><span>openssl</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># 我習慣在nginx把ssl裝在opt/nginx底下</span>
</span><span class='line'>mkdir /opt/nginx/ssl
</span><span class='line'>sudo openssl req -x509 -nodes -days <span class="m">365</span> -newkey rsa:2048 -keyout /opt/nginx/ssl/nginx.key -out /opt/nginx/ssl/nginx.crt
</span><span class='line'><span class="c"># 填寫基本資料</span>
</span><span class='line'><span class="c"># Common Name 填 Domain Name 或 IP</span>
</span><span class='line'><span class="c"># 建立金鑰nginx.key及憑證nginx.crt</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>nginx.conf</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>server <span class="o">{</span>
</span><span class='line'>  listen <span class="m">80</span> default_server<span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="c"># 將所有HTTP requests轉至HTTPS</span>
</span><span class='line'>  <span class="k">return</span> <span class="m">301</span> https://<span class="nv">$host$request_uri</span><span class="p">;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>server <span class="o">{</span>
</span><span class='line'>  listen <span class="m">443</span> ssl default_server<span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  ssl_certificate /opt/nginx/ssl/nginx.crt<span class="p">;</span>
</span><span class='line'>  ssl_certificate_key /opt/nginx/ssl/nginx.key<span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="c"># 其他ssl參數設定</span>
</span><span class='line'>  ...
</span><span class='line'>
</span><span class='line'>  server_name default_server<span class="p">;</span>
</span><span class='line'>  root /home/path/rails/public<span class="p">;</span>   <span class="c"># &lt;--- rails路徑</span>
</span><span class='line'>  rails_env production<span class="p">;</span>
</span><span class='line'>  passenger_enabled on<span class="p">;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>SSL設定最佳解可以參考 <a href="https://mozilla.github.io/server-side-tls/ssl-config-generator/">https://mozilla.github.io/server-side-tls/ssl-config-generator/</a></p>

<p>Reference:</p>

<p><a href="https://blog.gtwang.org/linux/nginx-create-and-install-ssl-certificate-on-ubuntu-linux/">https://blog.gtwang.org/linux/nginx-create-and-install-ssl-certificate-on-ubuntu-linux/</a></p>

<p><a href="https://ksmx.me/letsencrypt-ssl-https/">https://ksmx.me/letsencrypt-ssl-https/</a></p>

<p><a href="https://mozilla.github.io/server-side-tls/ssl-config-generator/">https://mozilla.github.io/server-side-tls/ssl-config-generator/</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Ethereum] 如何使用Windows來挖礦]]></title>
    <link href="http://blog.poyi.tw/blog/2016/04/05/how-to-mine-ethereum-on-windows/"/>
    <updated>2016-04-05T15:48:43+08:00</updated>
    <id>http://blog.poyi.tw/blog/2016/04/05/how-to-mine-ethereum-on-windows</id>
    <content type="html"><![CDATA[<h2>1. 安裝geth</h2>

<p><a href="https://github.com/ethereum/go-ethereum/releases">下載geth</a></p>

<p>解壓縮後不用執行放在C:\ (我放在E:\不過沒差)</p>

<p>建立錢包並設定密碼</p>

<p>以下指令都需要開command line(cmd)</p>

<figure class='code'><figcaption><span>C:\</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>geth account new
</span></code></pre></td></tr></table></div></figure>


<p>同步所有交易</p>

<figure class='code'><figcaption><span>C:\</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>geth --rpc
</span></code></pre></td></tr></table></div></figure>


<p>// 第一次似乎可以用geth &ndash;rpc &ndash;fast來快速sync完整node(沒試過)</p>

<h2>2. 安裝mining軟體</h2>

<p><a href="https://build.ethdev.com/builds/Windows%20C%2B%2B%20develop%20branch/">下載mining軟體</a>(載最下面的即可)
照一般安裝流程</p>

<p>安裝好後可以測設備的算力，正常來說是GPU比較快(AMD > nVidia)</p>

<figure class='code'><figcaption><span>C:\Program Files\Ethereum (版號)\Release</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ethminer -G -M <span class="c"># GPU</span>
</span><span class='line'>ethminer -M    <span class="c"># CPU</span>
</span></code></pre></td></tr></table></div></figure>


<h2>3. 挖礦</h2>

<p>挖礦前blockchain要先sync過，也就是&#8221;geth &ndash;rpc&#8221;</p>

<p>看是要自己挖還是加入別人礦池</p>

<h3>自己挖</h3>

<figure class='code'><figcaption><span>C:\Program Files\Ethereum (版號)\Release</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ethminer -G <span class="c"># GPU</span>
</span></code></pre></td></tr></table></div></figure>


<h3>加入礦池</h3>

<p>需按照<a href="http://cryptomining-blog.com/7529-ethereum-mining-is-getting-way-too-centralized/">各大礦池</a>的教學操作，基本上都不需要註冊，直接使用礦池提供的url+你的錢包地址來挖就行了</p>

<p>我這邊使用nanopool(另外還有dwarfpool/ethpool&hellip;)</p>

<figure class='code'><figcaption><span>C:\Program Files\Ethereum (版號)\Release</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>// ethminer.exe http://asia1.nanopool.org:8888/YOUR_WALLET_ADDRESS -G
</span><span class='line'>ethminer.exe http://asia1.nanopool.org:8888/0xb2944f316e14887bce4b5fae1c66ac78ba7c9123 -G
</span></code></pre></td></tr></table></div></figure>


<p>也可以加上worker跟mail(會通知你的worker是否關閉)</p>

<figure class='code'><figcaption><span>C:\Program Files\Ethereum (版號)\Release</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ethminer.exe http://asia1.nanopool.org:8888/YOUR_WALLET_ADDRESS/YOUR_WORKER_NAME/YOUR_EMAIL -G
</span></code></pre></td></tr></table></div></figure>


<h2>4. 看成果(礦池)</h2>

<p>可依照nanopool提供的api查看目前情況</p>

<p><a href="http://eth.nanopool.org/api/balance/0xb2944f316e14887bce4b5fae1c66ac78ba7c9123">http://eth.nanopool.org/api/balance/0xb2944f316e14887bce4b5fae1c66ac78ba7c9123</a>
<a href="http://eth.nanopool.org/account/0xb2944f316e14887bce4b5fae1c66ac78ba7c9123/bob">http://eth.nanopool.org/account/0xb2944f316e14887bce4b5fae1c66ac78ba7c9123/bob</a>
<a href="https://www.etherchain.org/account/0xb2944f316e14887bce4b5fae1c66ac78ba7c9123">https://www.etherchain.org/account/0xb2944f316e14887bce4b5fae1c66ac78ba7c9123</a></p>

<p>nanopool一天會結算四次，最少要有0.1 Eth才會發transaction到你的wallet</p>

<p>用本機下geth指令查你的錢包資訊</p>

<figure class='code'><figcaption><span>C:\</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>geth attach
</span><span class='line'>&gt; eth.coinbase
</span><span class='line'><span class="s2">&quot;0xb2944f316e14887bce4b5fae1c66ac78ba7c9123&quot;</span>
</span><span class='line'>&gt; eth.acccounts
</span><span class='line'><span class="o">[</span><span class="s2">&quot;0xb2944f316e14887bce4b5fae1c66ac78ba7c9123&quot;</span><span class="o">]</span>
</span><span class='line'>&gt; eth.getBalance<span class="o">(</span>eth.coinbase<span class="o">)</span>
</span><span class='line'>0
</span></code></pre></td></tr></table></div></figure>


<p>記得要sync到最新才能拿到正確資訊</p>

<p>可以到<a href="https://www.etherchain.org/">Etherchain</a>看一下Recent blocks是不是已經sync到最新的block</p>

<h2>把指令包成.bat批次檔</h2>

<p>因為需要分別開mining, sync以及console三個cmd並執行不同指令，所以我把指令包成.bat放桌面，或是拿來排程執行都ok</p>

<figure class='code'><figcaption><span>ethereum_mining.bat</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bat'><span class='line'><span class="k">echo</span> <span class="k">on</span>
</span><span class='line'>E:
</span><span class='line'><span class="k">cd</span> <span class="s2">&quot;Program Files\Ethereum 0.9.41\Release&quot;</span>
</span><span class='line'>ethminer -F asia<span class="m">1</span>.nanopool.org:8888<span class="n">/0xb2944f316e14887bce4b5fae1c66ac78ba7c9123/bob/maydaybob2000@gmail.com</span> -G
</span></code></pre></td></tr></table></div></figure>


<p>使用GPU來挖，所以會吃顯卡效能</p>

<p><a href="http://blog.poyi.tw/images/poyi/ethereum_mining.jpg" target="_blank"><img src="http://blog.poyi.tw/images/poyi/ethereum_mining.jpg" title="image" alt="images"></a></p>

<p><br></p>

<figure class='code'><figcaption><span>ethereum_sync.bat</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bat'><span class='line'><span class="k">echo</span> <span class="k">on</span>
</span><span class='line'>E:
</span><span class='line'>geth --rpc
</span></code></pre></td></tr></table></div></figure>


<p>sync會吃網路流量，圖中最下面的 #1401468 就是指我這台目前sync到這個block</p>

<p><a href="http://blog.poyi.tw/images/poyi/ethereum_sync.jpg" target="_blank"><img src="http://blog.poyi.tw/images/poyi/ethereum_sync.jpg" title="image" alt="images"></a></p>

<p><br></p>

<figure class='code'><figcaption><span>ethereum_console.bat</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bat'><span class='line'><span class="k">echo</span> <span class="k">on</span>
</span><span class='line'>E:
</span><span class='line'>geth attach
</span></code></pre></td></tr></table></div></figure>


<p>使用console前記得打開sync</p>

<p><a href="http://blog.poyi.tw/images/poyi/ethereum_console.jpg" target="_blank"><img src="http://blog.poyi.tw/images/poyi/ethereum_console.jpg" title="image" alt="images"></a></p>

<p>Reference:</p>

<p><a href="https://www.cryptocompare.com/mining/guides/how-to-mine-ethereum/">https://www.cryptocompare.com/mining/guides/how-to-mine-ethereum/</a></p>

<p><a href="http://nanopool.org">http://nanopool.org</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Golang] Golang 101 入門筆記]]></title>
    <link href="http://blog.poyi.tw/blog/2016/04/02/golang-begging/"/>
    <updated>2016-04-02T20:59:38+08:00</updated>
    <id>http://blog.poyi.tw/blog/2016/04/02/golang-begging</id>
    <content type="html"><![CDATA[<h2>Hello Go!</h2>

<figure class='code'><figcaption><span>hello.go</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;hello, go!&quot;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>go run hello.go
</span><span class='line'>Hello Go!
</span></code></pre></td></tr></table></div></figure>


<h2>基本結構、定義變數</h2>

<h3>常數</h3>

<figure class='code'><figcaption><span>常數 const identifier [type] = value</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kd">const</span> <span class="nx">Pi</span> <span class="p">=</span> <span class="mf">3.14159</span>
</span><span class='line'><span class="kd">const</span> <span class="nx">Monday</span><span class="p">,</span> <span class="nx">Tuesday</span><span class="p">,</span> <span class="nx">Wednesday</span><span class="p">,</span> <span class="nx">Thursday</span><span class="p">,</span> <span class="nx">Friday</span><span class="p">,</span> <span class="nx">Saturday</span> <span class="p">=</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span>
</span><span class='line'><span class="kd">const</span> <span class="p">(</span>
</span><span class='line'>  <span class="nx">Unknown</span> <span class="p">=</span> <span class="mi">0</span>
</span><span class='line'>  <span class="nx">Female</span> <span class="p">=</span> <span class="mi">1</span>
</span><span class='line'>  <span class="nx">Male</span> <span class="p">=</span> <span class="mi">2</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'><span class="c1">// &quot;iota&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>變數</h3>

<figure class='code'><figcaption><span>變數 var identifier type / var identifier [type] = value</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kd">var</span> <span class="nx">a</span> <span class="kt">int</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">b</span> <span class="kt">bool</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">str</span> <span class="kt">string</span>
</span><span class='line'>
</span><span class='line'><span class="kd">var</span> <span class="nx">a</span> <span class="kt">int</span> <span class="p">=</span> <span class="mi">15</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">i</span> <span class="p">=</span> <span class="mi">5</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">b</span> <span class="kt">bool</span> <span class="p">=</span> <span class="kc">false</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">str</span> <span class="kt">string</span> <span class="p">=</span> <span class="s">&quot;Hello Go!&quot;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c1">// := 初始化並給值(local限定)</span>
</span><span class='line'><span class="nx">i</span> <span class="o">:=</span> <span class="mi">1</span>
</span><span class='line'><span class="nx">s</span> <span class="o">:=</span> <span class="s">&quot;hi&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>類型轉換</h3>

<ul>
<li>int : int8, int16, int32, int64</li>
<li>uint : uint8, uint16, uint32, uint64</li>
<li>float: float32, float64</li>
<li>不同類型之間做計算都需要經過類型轉換</li>
</ul>


<figure class='code'><figcaption><span>類型轉換 valueOfTypeB = typeB(valueOfTypeA)</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kd">var</span> <span class="nx">a</span> <span class="kt">int</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">b</span> <span class="kt">int32</span>
</span><span class='line'><span class="nx">a</span> <span class="p">=</span> <span class="mi">15</span>
</span><span class='line'><span class="nx">b</span> <span class="p">=</span> <span class="nx">a</span> <span class="o">+</span> <span class="mi">6</span> <span class="c1">// cannot use a + 6 (type int) as type int32 in assignment</span>
</span><span class='line'><span class="nx">b</span> <span class="p">=</span> <span class="nb">int32</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span> <span class="o">+</span> <span class="mi">6</span>
</span></code></pre></td></tr></table></div></figure>


<h3>指針</h3>

<figure class='code'><figcaption><span>pointer</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="c1">// 若有一個變數為abc，則 &amp;abc 可取得 abc 的記憶體位置</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">i1</span> <span class="p">=</span> <span class="mi">5</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;An integer: %d, its location in memory: %p\n&quot;</span><span class="p">,</span> <span class="nx">i1</span><span class="p">,</span> <span class="o">&amp;</span><span class="nx">i1</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 要直接定義pointer的話，使用 *abc</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">intP</span> <span class="o">*</span><span class="kt">int</span>
</span><span class='line'>  <span class="nx">intP</span> <span class="p">=</span> <span class="o">&amp;</span><span class="nx">i1</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;The value at memory location %p is %d\n&quot;</span><span class="p">,</span> <span class="nx">intP</span><span class="p">,</span> <span class="o">*</span><span class="nx">intP</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>判斷式、迴圈</h2>

<figure class='code'><figcaption><span>if/else/switch/for</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="k">if</span> <span class="nx">abc</span> <span class="p">&gt;</span> <span class="mi">5</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="nx">abc</span> <span class="p">&lt;</span> <span class="o">-</span><span class="mi">5</span>  <span class="p">{</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">switch</span> <span class="nx">abc</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">case</span> <span class="mi">1</span><span class="p">:</span>
</span><span class='line'>    <span class="o">......</span>
</span><span class='line'>  <span class="k">case</span> <span class="mi">2</span><span class="p">:</span>
</span><span class='line'>    <span class="o">......</span>
</span><span class='line'>  <span class="k">default</span><span class="p">:</span>
</span><span class='line'>    <span class="o">......</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">for</span> <span class="nx">i</span> <span class="o">:=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="p">&lt;</span> <span class="mi">5</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// break 中斷並跳出迴圈或判斷式</span>
</span><span class='line'><span class="c1">// continue 略過當次剩餘的code，直接跳至迴圈下一run</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Function</h2>

<figure class='code'><figcaption><span>function</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kd">func</span> <span class="nx">say</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nb">println</span><span class="p">(</span><span class="s">&quot;Hi~&quot;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// min, max = MinMax(44, 33)</span>
</span><span class='line'><span class="kd">func</span> <span class="nx">MinMax</span><span class="p">(</span><span class="nx">a</span> <span class="kt">int</span><span class="p">,</span> <span class="nx">b</span> <span class="kt">int</span><span class="p">)</span> <span class="p">(</span><span class="nx">min</span> <span class="kt">int</span><span class="p">,</span> <span class="nx">max</span> <span class="kt">int</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">if</span> <span class="nx">a</span> <span class="p">&lt;</span> <span class="nx">b</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">min</span> <span class="p">=</span> <span class="nx">a</span>
</span><span class='line'>      <span class="nx">max</span> <span class="p">=</span> <span class="nx">b</span>
</span><span class='line'>  <span class="p">}</span> <span class="k">else</span> <span class="p">{</span> <span class="c1">// a = b or a &lt; b</span>
</span><span class='line'>      <span class="nx">min</span> <span class="p">=</span> <span class="nx">b</span>
</span><span class='line'>      <span class="nx">max</span> <span class="p">=</span> <span class="nx">a</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">return</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">Min</span><span class="p">(</span><span class="nx">a</span> <span class="o">...</span><span class="kt">int</span><span class="p">)</span> <span class="kt">int</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>其他備忘</h2>

<ul>
<li>不同類型之間做計算都需要經過類型轉換</li>
<li>import library或是變數卻沒使用的話會跳錯</li>
<li>駝峰式命名</li>
</ul>


<p>Reference:</p>

<p><a href="https://github.com/Unknwon/the-way-to-go_ZH_CN/blob/master/eBook/directory.md">https://github.com/Unknwon/the-way-to-go_ZH_CN/blob/master/eBook/directory.md</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Bitcoin] 客製比特幣位址並匯入錢包]]></title>
    <link href="http://blog.poyi.tw/blog/2016/03/05/generate-your-own-bitcoin-address/"/>
    <updated>2016-03-05T13:32:29+08:00</updated>
    <id>http://blog.poyi.tw/blog/2016/03/05/generate-your-own-bitcoin-address</id>
    <content type="html"><![CDATA[<h2>使用vanitygen客製比特幣位址</h2>

<h3>安裝vanitygen</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo apt-get install build-essential libssl-dev libpcre3-dev
</span><span class='line'>git clone https://github.com/samr7/vanitygen.git
</span><span class='line'><span class="nb">cd </span>vanitygen
</span><span class='line'>make
</span></code></pre></td></tr></table></div></figure>


<h3>Generate Your Own Bitcoin Address</h3>

<ul>
<li>Base58 避免使用數字0和字母大寫O以及字母大寫I和字母小寫l</li>
<li>要使用該Address的話，記得備份好Privkey避免公開，擁有Privkey即等於擁有此Address發送權</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># 指定開頭</span>
</span><span class='line'><span class="nv">$ </span>./vanitygen 1Bob
</span><span class='line'>  Difficulty: 77178
</span><span class='line'>  Pattern: 1Bob
</span><span class='line'>  Address: 1Bobnp85Ns6JUDaMntc672ZjfsWSzrUnZH
</span><span class='line'>  Privkey: XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
</span><span class='line'>
</span><span class='line'><span class="c"># 忽略大小寫</span>
</span><span class='line'><span class="nv">$ </span>./vanitygen -i 1boba
</span><span class='line'>  Difficulty: 1100434
</span><span class='line'>  Pattern: 1boba
</span><span class='line'>  Address: 1BoBAeQ6vEw2wCitEvRAXuSfRJfwuVGt1L
</span><span class='line'>  Privkey: XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
</span><span class='line'>
</span><span class='line'><span class="c"># 指定結尾</span>
</span><span class='line'><span class="nv">$ </span>./vanitygen -r bob<span class="err">$</span>
</span><span class='line'>Pattern: bob<span class="err">$</span>
</span><span class='line'>Address: 14a6Pw84woyKjysT6Uc9gJF2M8prwYtbob
</span><span class='line'>Privkey: XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
</span></code></pre></td></tr></table></div></figure>


<h3>將 Privkey 匯入Bitcoind錢包</h3>

<p>大部分錢包軟體都會提供匯入Privkey的功能，但我這邊使用Bitcoind</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># 先確認此Address狀態</span>
</span><span class='line'><span class="nv">$ </span>bitcoin-cli validateaddress 1Bobnp85Ns6JUDaMntc672ZjfsWSzrUnZH
</span><span class='line'><span class="o">{</span>
</span><span class='line'>  <span class="s2">&quot;isvalid&quot;</span>: <span class="nb">true</span>,
</span><span class='line'>  <span class="s2">&quot;address&quot;</span>: <span class="s2">&quot;1Bobnp85Ns6JUDaMntc672ZjfsWSzrUnZH&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;scriptPubKey&quot;</span>: <span class="s2">&quot;76a91476816ee640da13a0d821d79a01892d8598288bb488ac&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;ismine&quot;</span>: <span class="nb">false</span>,
</span><span class='line'>  <span class="s2">&quot;iswatchonly&quot;</span>: <span class="nb">false</span>,
</span><span class='line'>  <span class="s2">&quot;isscript&quot;</span>: <span class="nb">false</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="c"># &quot;ismine&quot;: false =&gt; 代表此address還不是自己的</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># bitcoin-cli importprivkey &lt;Privkey&gt; [label] [rescan=true]</span>
</span><span class='line'><span class="c"># label 是指你要放入哪個account，預設都會有一個””空字串的account</span>
</span><span class='line'><span class="c"># rescan 填true的話，會去掃以前到現在所有的transaction確定此address是否有被使用過(但會跑很久)</span>
</span><span class='line'><span class="c">#        如果只是新address的話這邊填false就行了</span>
</span><span class='line'><span class="nv">$ </span>bitcoin-cli importprivkey XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX “” <span class="nb">false</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>bitcoin-cli validateaddress 1Bobnp85Ns6JUDaMntc672ZjfsWSzrUnZH
</span><span class='line'><span class="o">{</span>
</span><span class='line'>  <span class="s2">&quot;isvalid&quot;</span>: <span class="nb">true</span>,
</span><span class='line'>  <span class="s2">&quot;address&quot;</span>: <span class="s2">&quot;1Bobnp85Ns6JUDaMntc672ZjfsWSzrUnZH&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;scriptPubKey&quot;</span>: <span class="s2">&quot;76a91476816ee640da13a0d821d79a01892d8598288bb488ac&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;ismine&quot;</span>: <span class="nb">true</span>,
</span><span class='line'>  <span class="s2">&quot;iswatchonly&quot;</span>: <span class="nb">false</span>,
</span><span class='line'>  <span class="s2">&quot;isscript&quot;</span>: <span class="nb">false</span>,
</span><span class='line'>  <span class="s2">&quot;iscompressed&quot;</span>: <span class="nb">true</span>,
</span><span class='line'>  <span class="s2">&quot;account&quot;</span>: <span class="s2">&quot;&quot;</span>
</span><span class='line'><span class="o">}</span> 
</span><span class='line'><span class="c"># &quot;ismine&quot;: true =&gt; 現在此Address就是屬於你的</span>
</span></code></pre></td></tr></table></div></figure>


<p>Reference:</p>

<p><a href="https://en.bitcoin.it/wiki/Vanitygen">https://en.bitcoin.it/wiki/Vanitygen</a></p>

<p><a href="http://8btc.com/article-1930-1.html">http://8btc.com/article-1930-1.html</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Ubuntu] 架設 OpenVpn Server & Client]]></title>
    <link href="http://blog.poyi.tw/blog/2016/03/05/ubuntu-openvpn-server-client/"/>
    <updated>2016-03-05T11:42:49+08:00</updated>
    <id>http://blog.poyi.tw/blog/2016/03/05/ubuntu-openvpn-server-client</id>
    <content type="html"><![CDATA[<h2>OpenVpn</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>apt-get update
</span><span class='line'>apt-get install openvpn easy-rsa
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>gunzip -c /usr/share/doc/openvpn/examples/sample-config-files/server.conf.gz &gt; /etc/openvpn/server.conf
</span><span class='line'>vim /etc/openvpn/server.conf
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>/etc/openvpn/server.conf</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># dh dh1024.pem</span>
</span><span class='line'>dh2048.pem
</span><span class='line'>
</span><span class='line'>ca ca.crt
</span><span class='line'>cert server.crt
</span><span class='line'>key server.key
</span><span class='line'>
</span><span class='line'><span class="c"># 拿掉註解</span>
</span><span class='line'>push <span class="s2">&quot;redirect-gateway def1 bypass-dhcp&quot;</span>
</span><span class='line'>user nobody
</span><span class='line'>group nogroup
</span><span class='line'><span class="c"># 補上8.8.8.8</span>
</span><span class='line'>push <span class="s2">&quot;dhcp-option DNS 8.8.8.8&quot;</span>
</span><span class='line'><span class="p">;</span>push <span class="s2">&quot;dhcp-option DNS 208.67.222.222&quot;</span>
</span><span class='line'><span class="p">;</span>push <span class="s2">&quot;dhcp-option DNS 208.67.220.220&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c">#其他基本上維持預設即可</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Packet Forwarding</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">echo </span><span class="m">1</span> &gt; /proc/sys/net/ipv4/ip_forward
</span><span class='line'>vim /etc/sysctl.conf
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>/etc/sysctl.conf</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># 拿掉註解</span>
</span><span class='line'>net.ipv4.ip_forward<span class="o">=</span>1
</span></code></pre></td></tr></table></div></figure>


<h3>Uncomplicated Firewall</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ufw allow ssh
</span><span class='line'>ufw allow 1194/udp
</span><span class='line'>ufw allow <span class="m">80</span> <span class="c"># 開外連進來所需要的port</span>
</span><span class='line'>vim /etc/default/ufw
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>/etc/default/ufw</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># 將DROP改成ACCEPT</span>
</span><span class='line'><span class="nv">DEFAULT_FORWARD_POLICY</span><span class="o">=</span><span class="s2">&quot;ACCEPT&quot;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>vim /etc/ufw/before.rules
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>/etc/ufw/before.rules 加入OPENVPN RULES(11~18行)</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#</span>
</span><span class='line'><span class="c"># rules.before</span>
</span><span class='line'><span class="c">#</span>
</span><span class='line'><span class="c"># Rules that should be run before the ufw command line added rules. Custom</span>
</span><span class='line'><span class="c"># rules should be added to one of these chains:</span>
</span><span class='line'><span class="c">#   ufw-before-input</span>
</span><span class='line'><span class="c">#   ufw-before-output</span>
</span><span class='line'><span class="c">#   ufw-before-forward</span>
</span><span class='line'><span class="c">#</span>
</span><span class='line'>
</span><span class='line'><span class="c"># START OPENVPN RULES</span>
</span><span class='line'><span class="c"># NAT table rules</span>
</span><span class='line'>*nat
</span><span class='line'>:POSTROUTING ACCEPT <span class="o">[</span>0:0<span class="o">]</span>
</span><span class='line'><span class="c"># Allow traffic from OpenVPN client to ppp0</span>
</span><span class='line'>-A POSTROUTING -s 10.8.0.0/8 -o ppp0 -j MASQUERADE
</span><span class='line'>COMMIT
</span><span class='line'><span class="c"># END OPENVPN RULES</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ufw <span class="nb">enable</span>
</span><span class='line'>ufw status
</span></code></pre></td></tr></table></div></figure>


<h3>Generate Certificate Authority</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>cp -r /usr/share/easy-rsa/ /etc/openvpn
</span><span class='line'>mkdir /etc/openvpn/easy-rsa/keys
</span><span class='line'>vim /etc/openvpn/easy-rsa/vars
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>/etc/openvpn/easy-rsa/vars</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">export </span><span class="nv">KEY_COUNTRY</span><span class="o">=</span>“TW”
</span><span class='line'><span class="nb">export </span><span class="nv">KEY_PROVINCE</span><span class="o">=</span>“Taiwan”
</span><span class='line'><span class="nb">export </span><span class="nv">KEY_CITY</span><span class="o">=</span>“Taipei”
</span><span class='line'><span class="nb">export </span><span class="nv">KEY_ORG</span><span class="o">=</span><span class="s2">&quot;My Company Name&quot;</span>
</span><span class='line'><span class="nb">export </span><span class="nv">KEY_EMAIL</span><span class="o">=</span><span class="s2">&quot;sammy@example.com&quot;</span>
</span><span class='line'><span class="nb">export </span><span class="nv">KEY_OU</span><span class="o">=</span><span class="s2">&quot;MYOrganizationalUnit&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="nb">export </span><span class="nv">KEY_NAME</span><span class="o">=</span>“server”
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>openssl dhparam -out /etc/openvpn/dh2048.pem 2048
</span><span class='line'><span class="nb">cd</span> /etc/openvpn/easy-rsa
</span><span class='line'>. ./vars
</span><span class='line'>./clean-all
</span><span class='line'>./build-ca
</span></code></pre></td></tr></table></div></figure>


<h3>Generate Server-side Key</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>./build-key-server server
</span><span class='line'>cp /etc/openvpn/easy-rsa/keys/<span class="o">{</span>server.crt,server.key,ca.crt<span class="o">}</span> /etc/openvpn
</span></code></pre></td></tr></table></div></figure>


<p>啟動Server</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>service openvpn start
</span><span class='line'>service openvpn status
</span><span class='line'><span class="c"># service openvpn stop</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Generate Client-side Key</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>./build-key bob01
</span><span class='line'>mkdir /etc/openvpn/bob01
</span><span class='line'>cp /etc/openvpn/easy-rsa/keys/bob01.crt,bob01.key /etc/openvpn/bob01/
</span><span class='line'>cp /etc/openvpn/easy-rsa/ca.crt /etc/openvpn/bob01/
</span><span class='line'>cp /usr/share/doc/openvpn/examples/sample-config-files/client.conf  /etc/openvpn/bob01/bob01.ovpn
</span><span class='line'>vim /etc/openvpn/bob01/bob01.ovpn
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>/etc/openvpn/bob01/bob01.ovpn</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>remote MY_SERVER_IP 1194
</span><span class='line'>ca ca.crt
</span><span class='line'>cert bob01.crt
</span><span class='line'>key bob01.key
</span></code></pre></td></tr></table></div></figure>


<p>最後在client端把/etc/openvpn/bob01/抓下來，用bob01.ovpn啟動即可</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Ubuntu] 設定NTP校正時間]]></title>
    <link href="http://blog.poyi.tw/blog/2016/01/17/ubuntu-setting-ntp-sync-time/"/>
    <updated>2016-01-17T23:34:01+08:00</updated>
    <id>http://blog.poyi.tw/blog/2016/01/17/ubuntu-setting-ntp-sync-time</id>
    <content type="html"><![CDATA[<h3>校正系統時間</h3>

<p>類似OTP(google authenticator)這種服務當你系統時間不對就完全不能用</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>date <span class="c"># 確認目前時間</span>
</span><span class='line'><span class="nv">$ </span>dpkg -l <span class="p">|</span> grep ntp <span class="c"># 檢查是否已安裝</span>
</span><span class='line'><span class="nv">$ </span>sudo apt-get install ntp
</span><span class='line'><span class="nv">$ </span>vim /etc/ntp.conf
</span><span class='line'>  <span class="c"># 加上</span>
</span><span class='line'>  server tock.stdtime.gov.tw
</span><span class='line'>  server watch.stdtime.gov.tw
</span><span class='line'>  server time.stdtime.gov.tw
</span><span class='line'>  server clock.stdtime.gov.tw
</span><span class='line'>  server tick.stdtime.gov.tw
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>ntpdate time.stdtime.gov.tw
</span></code></pre></td></tr></table></div></figure>


<p>Reference:</p>

<p><a href="http://pineapplelin.pixnet.net/blog/post/25364493-ubuntu%E5%A6%82%E4%BD%95%E8%A8%AD%E5%AE%9Antp%E6%A0%A1%E6%99%82">http://pineapplelin.pixnet.net/blog/post/25364493-ubuntu%E5%A6%82%E4%BD%95%E8%A8%AD%E5%AE%9Antp%E6%A0%A1%E6%99%82</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Ubuntu] 設定 PPPoE 固定IP]]></title>
    <link href="http://blog.poyi.tw/blog/2016/01/17/ubuntu-setting-pppoe-static-ip/"/>
    <updated>2016-01-17T16:08:49+08:00</updated>
    <id>http://blog.poyi.tw/blog/2016/01/17/ubuntu-setting-pppoe-static-ip</id>
    <content type="html"><![CDATA[<h4>一般設定IP會直接寫在/etc/network/interfaces 看是要static還是dynamic</h4>

<figure class='code'><figcaption><span>/etc/network/interfaces</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>auto p1p1
</span><span class='line'>iface p1p1 inet static
</span><span class='line'>
</span><span class='line'>address 192.168.1.100
</span><span class='line'>netmask 255.255.255.0
</span><span class='line'>gateway 192.168.1.1
</span></code></pre></td></tr></table></div></figure>


<h4>而需要使用PPPoE 輸入電信商提供的帳號來登入時</h4>

<h5>帳號以中華電信為例</h5>

<ul>
<li><a href="&#x6d;&#97;&#x69;&#x6c;&#116;&#111;&#58;&#x78;&#120;&#x78;&#x78;&#x78;&#x78;&#120;&#x78;&#64;&#x68;&#105;&#110;&#x65;&#116;&#x2e;&#110;&#x65;&#x74;">&#x78;&#120;&#120;&#x78;&#x78;&#120;&#120;&#x78;&#x40;&#x68;&#105;&#110;&#101;&#x74;&#46;&#x6e;&#101;&#x74;</a>        取得動態IP (原有帳號格式)</li>
<li><a href="&#x6d;&#x61;&#x69;&#x6c;&#116;&#x6f;&#x3a;&#120;&#120;&#x78;&#120;&#x78;&#120;&#x78;&#120;&#64;&#105;&#x70;&#x2e;&#x68;&#105;&#110;&#101;&#116;&#46;&#110;&#x65;&#x74;">&#120;&#120;&#120;&#x78;&#x78;&#x78;&#120;&#x78;&#x40;&#x69;&#x70;&#x2e;&#104;&#x69;&#110;&#x65;&#x74;&#46;&#x6e;&#x65;&#x74;</a>     取得固定IP  僅限一台電腦使用</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo apt-get install pppoeconf
</span><span class='line'><span class="nv">$ </span>sudo pppoeconf
</span></code></pre></td></tr></table></div></figure>


<p>接著照著說明下一步，輸入帳號密碼等等的，全部設定完即可使用</p>

<p>也可以看到/etc/network/interfaces被加了一些設定</p>

<p>Reference:</p>

<p><a href="http://note.drx.tw/2008/08/networkpppoe-adsl.html">http://note.drx.tw/2008/08/networkpppoe-adsl.html</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Ruby] AES 加密解密]]></title>
    <link href="http://blog.poyi.tw/blog/2015/11/07/ruby-aes-encrypt-decrypt/"/>
    <updated>2015-11-07T14:48:06+08:00</updated>
    <id>http://blog.poyi.tw/blog/2015/11/07/ruby-aes-encrypt-decrypt</id>
    <content type="html"><![CDATA[<h3>對稱金鑰加密：加解密使用的金鑰是同一把</h3>

<ul>
<li>DES (Data Encryption Standard)</li>
<li>AES (Advanced Encryption Standard)</li>
</ul>


<h3>非對稱金鑰加密系統(公開金鑰加密)，加解密不同把key(公鑰私鑰)</h3>

<ul>
<li>RSA</li>
</ul>


<figure class='code'><figcaption><span>加密解密</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="vg">$key</span> <span class="o">=</span> <span class="s2">&quot;自定key&quot;</span> <span class="c1"># 可利用rails的sercret key(Rails.application.secrets.secret_key_base)</span>
</span><span class='line'><span class="vg">$iv</span>  <span class="o">=</span> <span class="s2">&quot;自定iv&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 加密</span>
</span><span class='line'><span class="k">def</span> <span class="nf">aes_encrypt</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>
</span><span class='line'>  <span class="n">cipher</span> <span class="o">=</span> <span class="no">OpenSSL</span><span class="o">::</span><span class="no">Cipher</span><span class="o">::</span><span class="no">AES128</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="ss">:CBC</span><span class="p">)</span>
</span><span class='line'>  <span class="n">cipher</span><span class="o">.</span><span class="n">encrypt</span>
</span><span class='line'>  <span class="n">cipher</span><span class="o">.</span><span class="n">key</span> <span class="o">=</span> <span class="vg">$key</span>
</span><span class='line'>  <span class="n">cipher</span><span class="o">.</span><span class="n">iv</span> <span class="o">=</span> <span class="vg">$iv</span>
</span><span class='line'>  <span class="n">encrypted</span> <span class="o">=</span> <span class="n">cipher</span><span class="o">.</span><span class="n">update</span><span class="p">(</span><span class="n">data</span><span class="p">)</span> <span class="o">+</span> <span class="n">cipher</span><span class="o">.</span><span class="n">final</span>
</span><span class='line'>  <span class="n">encrypted_base64</span> <span class="o">=</span> <span class="no">Base64</span><span class="o">.</span><span class="n">encode64</span><span class="p">(</span><span class="n">encrypted</span><span class="p">)</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">encrypted_base64</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 解密  </span>
</span><span class='line'><span class="k">def</span> <span class="nf">aes_decrypt</span><span class="p">(</span><span class="n">encrypted_base64</span><span class="p">)</span>
</span><span class='line'>  <span class="n">encrypted</span> <span class="o">=</span> <span class="no">Base64</span><span class="o">.</span><span class="n">decode64</span><span class="p">(</span><span class="n">encrypted_base64</span><span class="p">)</span>
</span><span class='line'>  <span class="n">decipher</span> <span class="o">=</span> <span class="no">OpenSSL</span><span class="o">::</span><span class="no">Cipher</span><span class="o">::</span><span class="no">AES128</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="ss">:CBC</span><span class="p">)</span>
</span><span class='line'>  <span class="n">decipher</span><span class="o">.</span><span class="n">decrypt</span>
</span><span class='line'>  <span class="n">decipher</span><span class="o">.</span><span class="n">key</span> <span class="o">=</span> <span class="vg">$key</span>
</span><span class='line'>  <span class="n">decipher</span><span class="o">.</span><span class="n">iv</span>  <span class="o">=</span> <span class="vg">$iv</span>
</span><span class='line'>  <span class="n">data</span> <span class="o">=</span> <span class="n">decipher</span><span class="o">.</span><span class="n">update</span><span class="p">(</span><span class="n">encrypted</span><span class="p">)</span> <span class="o">+</span> <span class="n">decipher</span><span class="o">.</span><span class="n">final</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">data</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure>


<p>Reference:</p>

<p><a href="http://wemee.blogspot.tw/2015/01/ruby-product-key-ruby.html">http://wemee.blogspot.tw/2015/01/ruby-product-key-ruby.html</a></p>

<p><a href="http://webos-goodies.jp/archives/encryption_in_ruby.html">http://webos-goodies.jp/archives/encryption_in_ruby.html</a></p>

<p><a href="http://blog.ifyouseewendy.com/blog/2014/11/20/encryption-in-ruby/">http://blog.ifyouseewendy.com/blog/2014/11/20/encryption-in-ruby/</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Rails] 各種update method]]></title>
    <link href="http://blog.poyi.tw/blog/2015/07/11/rails-various-update-methods/"/>
    <updated>2015-07-11T17:16:55+08:00</updated>
    <id>http://blog.poyi.tw/blog/2015/07/11/rails-various-update-methods</id>
    <content type="html"><![CDATA[<h2>正規Rails的更新 - update</h2>

<p>會觸發validation、callback、也會更新updated_at</p>

<figure class='code'><figcaption><span>update 寫法 (for 單筆)</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='Ruby'><span class='line'><span class="o">&gt;</span> <span class="no">Comment</span><span class="o">.</span><span class="n">last</span><span class="o">.</span><span class="n">update</span><span class="p">(</span><span class="ss">message</span><span class="p">:</span> <span class="s1">&#39;bbb&#39;</span><span class="p">)</span>
</span><span class='line'>   <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">1</span><span class="n">ms</span><span class="p">)</span>  <span class="k">begin</span> <span class="n">transaction</span>
</span><span class='line'>  <span class="no">SQL</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">4</span><span class="n">ms</span><span class="p">)</span>  <span class="no">UPDATE</span> <span class="s2">&quot;comments&quot;</span> <span class="no">SET</span> <span class="s2">&quot;message&quot;</span> <span class="o">=</span> <span class="sc">?,</span> <span class="s2">&quot;updated_at&quot;</span> <span class="o">=</span> <span class="p">?</span> <span class="no">WHERE</span> <span class="s2">&quot;comments&quot;</span><span class="o">.</span><span class="s2">&quot;id&quot;</span> <span class="o">=</span> <span class="p">?</span>  <span class="o">[[</span><span class="s2">&quot;message&quot;</span><span class="p">,</span> <span class="s2">&quot;bbb&quot;</span><span class="o">]</span><span class="p">,</span> <span class="o">[</span><span class="s2">&quot;updated_at&quot;</span><span class="p">,</span> <span class="s2">&quot;2015-07-11 09:42:02.303661&quot;</span><span class="o">]</span><span class="p">,</span> <span class="o">[</span><span class="s2">&quot;id&quot;</span><span class="p">,</span> <span class="mi">200</span><span class="o">]]</span>
</span><span class='line'>   <span class="p">(</span><span class="mi">9</span><span class="o">.</span><span class="mi">1</span><span class="n">ms</span><span class="p">)</span>  <span class="n">commit</span> <span class="n">transaction</span>
</span><span class='line'> <span class="o">=&gt;</span> <span class="kp">true</span>
</span></code></pre></td></tr></table></div></figure>


<h2>相當於直接下SQL的更新 - update_columns, update_all</h2>

<p>而 update_columns 及 update_all 是直接幫你下SQL更新欄位，會忽視Rails的validation，也沒有callback，updated_at也不會更新。所以最好是很確定要更新的值沒問題再使用這類語法。</p>

<figure class='code'><figcaption><span>update_columns 寫法 (for 單筆)</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='Ruby'><span class='line'><span class="o">&gt;</span> <span class="no">Comment</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="ss">:id</span> <span class="o">=&gt;</span> <span class="mi">200</span><span class="p">)</span><span class="o">.</span><span class="n">first</span><span class="o">.</span><span class="n">update_columns</span><span class="p">(</span><span class="ss">message</span><span class="p">:</span> <span class="s1">&#39;bbbbb&#39;</span><span class="p">,</span> <span class="ss">post_id</span><span class="p">:</span> <span class="mi">3</span><span class="p">)</span>
</span><span class='line'>  <span class="no">SQL</span> <span class="p">(</span><span class="mi">9</span><span class="o">.</span><span class="mi">2</span><span class="n">ms</span><span class="p">)</span>  <span class="no">UPDATE</span> <span class="s2">&quot;comments&quot;</span> <span class="no">SET</span> <span class="s2">&quot;message&quot;</span> <span class="o">=</span> <span class="s1">&#39;bbbbb&#39;</span><span class="p">,</span> <span class="s2">&quot;post_id&quot;</span> <span class="o">=</span> <span class="mi">3</span> <span class="no">WHERE</span> <span class="s2">&quot;comments&quot;</span><span class="o">.</span><span class="s2">&quot;id&quot;</span> <span class="o">=</span> <span class="p">?</span>  <span class="o">[[</span><span class="s2">&quot;id&quot;</span><span class="p">,</span> <span class="mi">200</span><span class="o">]]</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># update_column 跟 update_columns 相同，只是傳入值key跟value必須是string，並用逗點分隔</span>
</span><span class='line'><span class="o">&gt;</span> <span class="no">Comment</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="ss">:id</span> <span class="o">=&gt;</span> <span class="mi">200</span><span class="p">)</span><span class="o">.</span><span class="n">first</span><span class="o">.</span><span class="n">update_column</span><span class="p">(</span><span class="s1">&#39;message&#39;</span> <span class="p">,</span><span class="s1">&#39;bbbbb&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>update_all 寫法 (for relation)</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='Ruby'><span class='line'><span class="o">&gt;</span> <span class="no">Comment</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="ss">:id</span> <span class="o">=&gt;</span> <span class="mi">200</span><span class="p">)</span><span class="o">.</span><span class="n">update_all</span><span class="p">(</span><span class="ss">message</span><span class="p">:</span> <span class="s1">&#39;aaaaaaaaaa&#39;</span><span class="p">,</span> <span class="ss">post_id</span><span class="p">:</span> <span class="mi">10</span><span class="p">)</span>
</span><span class='line'>  <span class="no">SQL</span> <span class="p">(</span><span class="mi">9</span><span class="o">.</span><span class="mi">2</span><span class="n">ms</span><span class="p">)</span>  <span class="no">UPDATE</span> <span class="s2">&quot;comments&quot;</span> <span class="no">SET</span> <span class="s2">&quot;message&quot;</span> <span class="o">=</span> <span class="s1">&#39;aaaaaaaaaa&#39;</span><span class="p">,</span> <span class="s2">&quot;post_id&quot;</span> <span class="o">=</span> <span class="mi">10</span> <span class="no">WHERE</span> <span class="s2">&quot;comments&quot;</span><span class="o">.</span><span class="s2">&quot;id&quot;</span> <span class="o">=</span> <span class="p">?</span>  <span class="o">[[</span><span class="s2">&quot;id&quot;</span><span class="p">,</span> <span class="mi">200</span><span class="o">]]</span>
</span><span class='line'> <span class="o">=&gt;</span> <span class="mi">1</span>
</span></code></pre></td></tr></table></div></figure>


<h2>其他 - update_attribute</h2>

<p>忽視validation，有callback，會更新updated_at</p>

<figure class='code'><figcaption><span>update_attribute 寫法 (for 單筆)</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='Ruby'><span class='line'><span class="o">&gt;</span> <span class="no">Comment</span><span class="o">.</span><span class="n">last</span><span class="o">.</span><span class="n">update_attribute</span><span class="p">(</span><span class="s1">&#39;message&#39;</span> <span class="p">,</span><span class="s1">&#39;bbbbb&#39;</span><span class="p">)</span>
</span><span class='line'>   <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">1</span><span class="n">ms</span><span class="p">)</span>  <span class="k">begin</span> <span class="n">transaction</span>
</span><span class='line'>  <span class="no">SQL</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">4</span><span class="n">ms</span><span class="p">)</span>  <span class="no">UPDATE</span> <span class="s2">&quot;comments&quot;</span> <span class="no">SET</span> <span class="s2">&quot;message&quot;</span> <span class="o">=</span> <span class="sc">?,</span> <span class="s2">&quot;updated_at&quot;</span> <span class="o">=</span> <span class="p">?</span> <span class="no">WHERE</span> <span class="s2">&quot;comments&quot;</span><span class="o">.</span><span class="s2">&quot;id&quot;</span> <span class="o">=</span> <span class="p">?</span>  <span class="o">[[</span><span class="s2">&quot;message&quot;</span><span class="p">,</span> <span class="s2">&quot;bbbbb&quot;</span><span class="o">]</span><span class="p">,</span> <span class="o">[</span><span class="s2">&quot;updated_at&quot;</span><span class="p">,</span> <span class="s2">&quot;2015-07-11 09:45:55.190026&quot;</span><span class="o">]</span><span class="p">,</span> <span class="o">[</span><span class="s2">&quot;id&quot;</span><span class="p">,</span> <span class="mi">200</span><span class="o">]]</span>
</span><span class='line'>   <span class="p">(</span><span class="mi">8</span><span class="o">.</span><span class="mi">5</span><span class="n">ms</span><span class="p">)</span>  <span class="n">commit</span> <span class="n">transaction</span>
</span><span class='line'> <span class="o">=&gt;</span> <span class="kp">true</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Mac] 三步驟純指令建立Ubuntu的USB隨身碟]]></title>
    <link href="http://blog.poyi.tw/blog/2015/06/29/mac-build-ubuntu-flash-using-command/"/>
    <updated>2015-06-29T23:39:10+08:00</updated>
    <id>http://blog.poyi.tw/blog/2015/06/29/mac-build-ubuntu-flash-using-command</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span>將載好的ubuntu.iso 轉成 ubuntu.dmg</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Bob:Downloads <span class="nv">$ </span>hdiutil convert -format UDRW -o ubuntu-14.04.2-server-amd64.dmg ubuntu-14.04.2-server-amd64.iso
</span><span class='line'>正在讀取Driver Descriptor Map（DDM：0）⋯
</span><span class='line'>正在讀取Ubuntu-Server 14.04.2 LTS amd64 （Apple_ISO：1）⋯
</span><span class='line'>正在讀取Apple（Apple_partition_map：2）⋯
</span><span class='line'>正在讀取Ubuntu-Server 14.04.2 LTS amd64 （Apple_ISO：3）⋯
</span><span class='line'>..............
</span><span class='line'>正在讀取EFI（Apple_HFS：4）⋯
</span><span class='line'>...............
</span><span class='line'>正在讀取Ubuntu-Server 14.04.2 LTS amd64 （Apple_ISO：5）⋯
</span><span class='line'>..............................................................................
</span><span class='line'>經過時間： 7.977s
</span><span class='line'>速度：74.6Mbyte/秒
</span><span class='line'>節省：0.0%
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>找到你的usb隨身碟後卸載它</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Bob:Downloads <span class="nv">$ </span>diskutil list
</span><span class='line'>/dev/disk0
</span><span class='line'>  ...
</span><span class='line'>/dev/disk1
</span><span class='line'>  ...
</span><span class='line'>/dev/disk2
</span><span class='line'>   <span class="c">#:                       TYPE NAME                    SIZE       IDENTIFIER</span>
</span><span class='line'>   0:     FDisk_partition_scheme                        *8.1 GB     disk2
</span><span class='line'>   1:             Windows_FAT_32 ADATA UFD               8.1 GB     disk2s1
</span><span class='line'>Bob:Downloads <span class="nv">$ </span>diskutil unmountDisk /dev/disk2
</span><span class='line'>Unmount of all volumes on disk2 was successful
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>dd 把資料寫入隨身碟</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Bob:Downloads <span class="nv">$ </span>sudo dd <span class="k">if</span><span class="o">=</span>ubuntu-14.04.2-server-amd64.dmg <span class="nv">of</span><span class="o">=</span>/dev/rdisk2 <span class="nv">bs</span><span class="o">=</span>1m
</span><span class='line'>Password:
</span><span class='line'>595+0 records in
</span><span class='line'>595+0 records out
</span><span class='line'><span class="m">623902720</span> bytes transferred in 43.058655 secs <span class="o">(</span><span class="m">14489601</span> bytes/sec<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>執行完會跳「電腦讀不到您放入的磁碟。」，代表就成功了！</p>

<p>Reference:</p>

<p><a href="http://blog.itist.tw/2015/01/burning-linux-iso-image-to-usb-disk-on-osx.html">http://blog.itist.tw/2015/01/burning-linux-iso-image-to-usb-disk-on-osx.html</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Rails] AJAX render errors in json]]></title>
    <link href="http://blog.poyi.tw/blog/2015/06/12/rails-ajax-render-error-in-json/"/>
    <updated>2015-06-12T19:02:48+08:00</updated>
    <id>http://blog.poyi.tw/blog/2015/06/12/rails-ajax-render-error-in-json</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span>new.html.erb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">$</span><span class="p">.</span><span class="nx">ajax</span><span class="p">({</span>
</span><span class='line'>  <span class="nx">url</span><span class="o">:</span> <span class="nx">URL</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">async</span><span class="o">:</span><span class="kc">false</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">data</span><span class="o">:</span><span class="p">{</span>
</span><span class='line'>    <span class="nx">amount</span><span class="o">:</span> <span class="mi">100</span><span class="p">,</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="nx">dataType</span><span class="o">:</span><span class="s1">&#39;json&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">method</span><span class="o">:</span><span class="s1">&#39;post&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">success</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">data</span><span class="p">){</span>
</span><span class='line'>    <span class="c1">// do success things</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="nx">error</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">xhr</span><span class="p">){</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">errors</span> <span class="o">=</span> <span class="nx">$</span><span class="p">.</span><span class="nx">parseJSON</span><span class="p">(</span><span class="nx">xhr</span><span class="p">.</span><span class="nx">responseText</span><span class="p">).</span><span class="nx">errors</span>
</span><span class='line'>    <span class="nx">alert</span><span class="p">(</span><span class="nx">errors</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>orders_controller.rb </span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">create</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">amount</span> <span class="o">&lt;</span> <span class="mi">100</span>
</span><span class='line'>    <span class="n">render</span> <span class="ss">:json</span> <span class="o">=&gt;</span> <span class="p">{</span> <span class="ss">:errors</span> <span class="o">=&gt;</span> <span class="s2">&quot;金額不足&quot;</span> <span class="p">},</span> <span class="ss">:status</span> <span class="o">=&gt;</span> <span class="mi">422</span>
</span><span class='line'>    <span class="k">return</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>當錯誤回傳時，使用422(Unprocessable Entity)來做error handling</p>

<p>Reference:</p>

<p><a href="http://travisjeffery.com/b/2012/04/rendering-errors-in-json-with-rails/">http://travisjeffery.com/b/2012/04/rendering-errors-in-json-with-rails/</a>
<a href="http://stackoverflow.com/questions/16133923/400-vs-422-response-to-post-of-data">http://stackoverflow.com/questions/16133923/400-vs-422-response-to-post-of-data</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[資料被綁架軟體加密，要求贖金用比特幣支付]]></title>
    <link href="http://blog.poyi.tw/blog/2015/04/18/all-your-important-files-are-encrypted/"/>
    <updated>2015-04-18T00:13:56+08:00</updated>
    <id>http://blog.poyi.tw/blog/2015/04/18/all-your-important-files-are-encrypted</id>
    <content type="html"><![CDATA[<p><strong>這篇單純紀錄一下被綁架後頁面的流程。</strong></p>

<p>最近遇到幾間公司發現這種事，突然所有檔案被綁架軟體加密無法開啟，而桌面多了一份文字檔，裡面附上特殊網址及比特幣錢包位址…。(當然，這只是其中一款綁架軟體的方式)</p>

<p><img src="http://blog.poyi.tw/images/poyi/bitcoin1.png" title="image" alt="images"></p>

<p>輸入它給的錢包地址登入後，就可以看到所要求的贖金或相關資料了</p>

<p>應該會有類似以下的字眼 (這邊贖金要求你付2.5顆比特幣)</p>

<p><strong>All your important files are encrypted. <br>At the moment, the cost of private key for decrypting your file is 2.5 BTC</strong></p>

<p>而為了證明你付完贖金真的幫你解密，它還幫你解密其中一個的檔案讓你下載看看是否沒問題(如下圖下方的xlsx檔)… <del>不得不說還蠻貼心的…</del></p>

<p><img src="http://blog.poyi.tw/images/poyi/bitcoin2.jpg" title="image" alt="images"></p>

<p>而聽說沒付指定的贖金，對方不但不解密還會提高贖金</p>

<p>所以如果資料沒備份又找不到解法，也許就甘願一點付錢吧…</p>

<p>算是這年頭支付太過方便的缺點吧</p>

<p><img src="http://blog.poyi.tw/images/poyi/bitcoin3.png" title="image" alt="images"></p>

<p>而另外它也提供如何購買比特幣相關資訊…<del>貼心再+1…</del></p>

<p>目前在台灣是可以直接去全家買會比較方便，這邊就請自行google :D</p>

<p><br>
Reference:</p>

<p><a href="http://buzzorange.com/techorange/2015/01/19/how-my-mom-got-hacked/">http://buzzorange.com/techorange/2015/01/19/how-my-mom-got-hacked/</a></p>

<p><a href="http://www.epochtimes.com/b5/15/4/9/n4407355.htm">http://www.epochtimes.com/b5/15/4/9/n4407355.htm</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Ruby] 教學 - 基本使用介紹2]]></title>
    <link href="http://blog.poyi.tw/blog/2015/04/12/ruby-basic-2/"/>
    <updated>2015-04-12T22:27:04+08:00</updated>
    <id>http://blog.poyi.tw/blog/2015/04/12/ruby-basic-2</id>
    <content type="html"><![CDATA[<h2>Define Methods</h2>

<figure class='code'><figcaption><span>基本的method定義</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">temp</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="mi">123</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">temp</span><span class="p">()</span>
</span><span class='line'><span class="n">temp</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">temp</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">,</span><span class="n">c</span><span class="p">)</span>
</span><span class='line'><span class="nb">puts</span> <span class="err">“</span><span class="c1">#{a} , #{b}, #{c}”</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="n">temp</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span>
</span><span class='line'><span class="n">temp</span> <span class="mi">1</span> <span class="p">,</span> <span class="mi">2</span> <span class="p">,</span> <span class="mi">3</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">temp</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">,</span><span class="n">c</span><span class="o">=</span><span class="mi">99</span><span class="p">)</span> <span class="c1"># 第三個參數若沒傳入的話預設值為99</span>
</span><span class='line'><span class="nb">puts</span> <span class="err">“</span><span class="c1">#{a} , #{b}, #{c}”</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="n">temp</span><span class="p">()</span>  <span class="c1"># wrong arguments (0 for 2..3) 錯誤訊息提示傳入值需要2~3個</span>
</span><span class='line'><span class="n">temp</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span>
</span><span class='line'><span class="n">temp</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">temp</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">,</span><span class="n">c</span><span class="o">=</span><span class="mi">99</span><span class="p">,</span> <span class="o">*</span><span class="n">argv</span><span class="p">)</span>
</span><span class='line'>  <span class="n">ap</span> <span class="o">[</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">,</span><span class="n">c</span><span class="p">,</span><span class="n">argv</span><span class="o">]</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="n">temp</span><span class="p">()</span>  <span class="c1"># wrong arguments (0 for 2+) 錯誤訊息提示傳入值需要2個以上</span>
</span><span class='line'><span class="n">temp</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">8</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>進階的method定義 (block)</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">temp</span><span class="p">(</span><span class="o">&amp;</span><span class="n">block</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">temp</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>  <span class="c1">#=&gt; wrong number of arguments (1 for 0) &amp;block不是傳入的參數</span>
</span><span class='line'><span class="n">temp</span><span class="p">()</span>   <span class="c1">#=&gt; nil</span>
</span><span class='line'><span class="n">temp</span><span class="p">(){</span><span class="nb">puts</span> <span class="s2">&quot;temp&quot;</span><span class="p">}</span> <span class="c1">#=&gt; nil </span>
</span><span class='line'><span class="c1"># 當temp()後面有block時會把這一段code放置&amp;block當中，但因為裡面沒有呼叫它執行所以nil</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">temp2</span><span class="p">(</span><span class="o">&amp;</span><span class="n">abc</span><span class="p">)</span>
</span><span class='line'>  <span class="n">abc</span><span class="o">.</span><span class="n">call</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">temp2</span><span class="p">{</span><span class="nb">puts</span> <span class="s2">&quot;gogo&quot;</span><span class="p">}</span> <span class="c1">#=&gt; &quot;gogo&quot;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>class methods  / instance methods</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Car</span>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">hi</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="err">“</span><span class="n">aaa</span><span class="err">”</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">hi</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="err">“</span><span class="n">bbb</span><span class="err">”</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">car</span> <span class="o">=</span> <span class="no">Car</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'><span class="no">Car</span><span class="o">.</span><span class="n">hi</span> <span class="c1">#=&gt; &quot;aaa&quot;</span>
</span><span class='line'><span class="n">car</span><span class="o">.</span><span class="n">hi</span> <span class="c1">#=&gt; &quot;bbb&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>attr_accessor 自動設定setter &amp; getter</li>
<li>attr_reader 設定getter</li>
<li>attr_writer 設定setter</li>
</ul>


<figure class='code'><figcaption><span>attr_accessor 等同於 getter & setter</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Person</span>
</span><span class='line'>  <span class="c1"># attr_accessor :name </span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">name</span> <span class="c1"># getter</span>
</span><span class='line'>    <span class="vi">@name</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">name</span><span class="o">=</span><span class="p">(</span><span class="n">str</span><span class="p">)</span> <span class="c1"># setter</span>
</span><span class='line'>    <span class="vi">@name</span> <span class="o">=</span> <span class="n">str</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">person</span> <span class="o">=</span> <span class="no">Person</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'><span class="n">person</span><span class="o">.</span><span class="n">name</span> <span class="o">=</span> <span class="s1">&#39;Bob&#39;</span> <span class="c1"># setter</span>
</span><span class='line'><span class="n">person</span><span class="o">.</span><span class="n">name</span> <span class="c1"># =&gt; &quot;bob&quot; # getter</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>$name:全域變數</li>
<li>@name:實例變數，作用域僅限定於 self 指示的物件</li>
<li>@@name: 類別變數，在class內才使用，跨class</li>
<li>name:區域變數(小寫字母或底線開頭；初始化前並沒有 nil 值)</li>
<li>Name:常數(大寫開頭；重覆定義時會出現警告)</li>
</ul>


<h4>Class &amp; Module</h4>

<p>Moudule只是一個不能被new的class</p>

<figure class='code'><figcaption><span>class / module </span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Class</span><span class="o">.</span><span class="n">superclass</span> <span class="c1">#=&gt; module </span>
</span><span class='line'>
</span><span class='line'><span class="k">module</span> <span class="nn">Flyable</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">fly</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;I can fly!&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Cat</span>
</span><span class='line'>  <span class="kp">include</span> <span class="no">Flyable</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">kitty</span> <span class="o">=</span> <span class="no">Cat</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'><span class="n">kitty</span><span class="o">.</span><span class="n">fly</span>
</span></code></pre></td></tr></table></div></figure>


<h4>Error Handling</h4>

<p>沒額外指定變數的話，錯誤資訊會放至$!(ERROR_INFO)及$@(ERROR_POSITION)</p>

<figure class='code'><figcaption><span>begin/rescue/ensure/end</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">begin</span>
</span><span class='line'>  <span class="c1"># 有機會發生例外的code</span>
</span><span class='line'><span class="k">rescue</span>
</span><span class='line'>  <span class="c1"># 發現例外後要執行的code</span>
</span><span class='line'><span class="k">ensure</span>
</span><span class='line'>  <span class="c1"># 無論是否例外都會執行的code</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Ruby] 教學 - 基本使用介紹]]></title>
    <link href="http://blog.poyi.tw/blog/2015/03/31/ruby-basic-1/"/>
    <updated>2015-03-31T22:27:04+08:00</updated>
    <id>http://blog.poyi.tw/blog/2015/03/31/ruby-basic-1</id>
    <content type="html"><![CDATA[<p>Rails熟了一點後就會發現其實大部分都是學會怎麼用它，卻很吃Ruby本身的概念</p>

<p>未來讓以後開發不會這麼吃力，來整複習一下好了 :D</p>

<h2>Everything is Ruby is an object</h2>

<p>Ruby 內皆為物件，無基本型別</p>

<figure class='code'><figcaption><span>X.class，X.methods 的用法</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="mi">123</span><span class="o">.</span><span class="n">methods</span> <span class="c1">#=&gt; 123可用的method列表  </span>
</span><span class='line'><span class="mi">123</span><span class="o">.</span><span class="n">class</span>   <span class="c1">#=&gt; Fixnum #知道class後就可以查doc  </span>
</span><span class='line'><span class="kp">true</span><span class="o">.</span><span class="n">class</span>  <span class="c1">#=&gt; TrueClass  </span>
</span><span class='line'><span class="kp">nil</span><span class="o">.</span><span class="n">class</span>   <span class="c1">#=&gt; NilClass  </span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&gt;</span> <span class="mi">2</span><span class="o">.</span><span class="n">even?</span>
</span><span class='line'> <span class="o">=&gt;</span> <span class="kp">true</span>
</span><span class='line'><span class="o">&gt;</span> <span class="mi">3</span><span class="o">.</span><span class="n">next</span>
</span><span class='line'> <span class="o">=&gt;</span> <span class="mi">4</span>
</span><span class='line'><span class="o">&gt;</span> <span class="o">-</span><span class="mi">1</span><span class="o">.</span><span class="n">abs</span>
</span><span class='line'> <span class="o">=&gt;</span> <span class="mi">1</span>
</span></code></pre></td></tr></table></div></figure>


<h2>基本使用</h2>

<figure class='code'><figcaption><span>各種常見型別</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="mi">123</span><span class="o">.</span><span class="n">class</span> <span class="c1">#integer</span>
</span><span class='line'><span class="mi">42343243243243243242343242344234234234</span><span class="o">.</span><span class="n">class</span> <span class="c1">#bignum  </span>
</span><span class='line'><span class="mi">123</span><span class="o">.</span><span class="mi">123</span><span class="o">.</span><span class="n">class</span> <span class="c1">#float  </span>
</span><span class='line'><span class="err">“</span><span class="mi">123</span><span class="err">”</span><span class="o">.</span><span class="n">class</span> <span class="c1">#string  </span>
</span><span class='line'><span class="o">[].</span><span class="n">class</span> <span class="c1">#array  </span>
</span><span class='line'><span class="p">{}</span><span class="o">.</span><span class="n">class</span>  <span class="c1">#hash  </span>
</span><span class='line'><span class="ss">:abc</span><span class="o">.</span><span class="n">class</span> <span class="c1">#symbol  </span>
</span><span class='line'><span class="kp">nil</span><span class="o">.</span><span class="n">class</span> <span class="c1">#nilClass  </span>
</span><span class='line'><span class="kp">true</span><span class="o">.</span><span class="n">class</span> <span class="c1">#TrueClass</span>
</span><span class='line'><span class="kp">false</span><span class="o">.</span><span class="n">class</span> <span class="c1">#FalseClass  </span>
</span></code></pre></td></tr></table></div></figure>


<h3>輸出String的用法</h3>

<figure class='code'><figcaption><span>輸出String的用法</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">“</span><span class="mi">123</span><span class="err">”</span> <span class="o">+</span> <span class="err">“</span><span class="mi">345</span><span class="err">”</span> <span class="o">+</span> <span class="err">“</span><span class="mi">333</span><span class="err">”</span>
</span><span class='line'><span class="n">x</span> <span class="o">=</span> <span class="mi">18</span>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;your age is </span><span class="si">#{</span><span class="n">x</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="nb">puts</span> <span class="err">‘</span><span class="p">\</span><span class="n">n</span><span class="p">\</span><span class="n">t</span><span class="err">’</span> <span class="c1">#單引號 (無視內容，直接輸出)  </span>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;</span><span class="se">\n\t</span><span class="s2">&quot;</span> <span class="c1">#雙引號 (換行)</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Hash</h3>

<figure class='code'><figcaption><span>hash宣告方式</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">x</span> <span class="o">=</span> <span class="p">{</span><span class="s2">&quot;wer&quot;</span> <span class="o">=&gt;</span> <span class="mi">123</span><span class="p">,</span> <span class="s2">&quot;sdf&quot;</span> <span class="o">=&gt;</span> <span class="mi">234</span><span class="p">}</span>
</span><span class='line'><span class="n">y</span> <span class="o">=</span> <span class="p">{</span><span class="ss">:wer</span> <span class="o">=&gt;</span> <span class="mi">123</span><span class="p">,</span> <span class="ss">:sdf</span> <span class="o">=&gt;</span> <span class="mi">234</span><span class="p">}</span>
</span><span class='line'><span class="c1">#symbol 拿來當key用  </span>
</span><span class='line'><span class="ss">:wer</span><span class="o">.</span><span class="n">object_id</span>  <span class="c1"># 在hash中key使用symbol會比string還相對快    </span>
</span></code></pre></td></tr></table></div></figure>


<h3>Nil/ False</h3>

<p>ruby只有兩種東西為非 => nil / false
其他都為true</p>

<figure class='code'><figcaption><span>nil false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="kp">nil</span> <span class="o">||</span> <span class="kp">false</span> <span class="o">||</span> <span class="mi">0</span>   <span class="c1"># 0    </span>
</span><span class='line'><span class="kp">nil</span> <span class="o">&amp;&amp;</span> <span class="kp">false</span> <span class="o">&amp;&amp;</span> <span class="mi">0</span>   <span class="c1"># nil  </span>
</span></code></pre></td></tr></table></div></figure>


<h3>判斷式</h3>

<h5>基本上if else</h5>

<figure class='code'><figcaption><span>if/else if/elsif/else unless/end</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">if</span> <span class="n">size</span> <span class="o">&gt;</span> <span class="mi">30</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;winner&quot;</span>
</span><span class='line'><span class="k">else</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;loser&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h5>因為在ruby只有false及nil為非，所以當你要判斷該變數有沒有值時可以直接這樣寫</h5>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">if</span> <span class="nb">name</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="nb">name</span>
</span><span class='line'><span class="k">else</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;error&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h5>後置判斷式，直接把if放後面</h5>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">puts</span> <span class="nb">name</span> <span class="k">if</span> <span class="nb">name</span> <span class="c1"># 當name有值時印出來，沒有值即略過</span>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;error&quot;</span> <span class="k">unless</span> <span class="nb">name</span> <span class="c1"># 當name沒有值時印error</span>
</span></code></pre></td></tr></table></div></figure>


<h5>簡單的判斷式也可以寫成單行</h5>

<figure class='code'><figcaption><span>condition ? true : false</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">puts</span> <span class="n">size</span> <span class="o">&gt;</span> <span class="mi">30</span> <span class="o">?</span> <span class="s2">&quot;winner&quot;</span> <span class="p">:</span> <span class="s2">&quot;loser&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h5>ruby的switch case寫法</h5>

<figure class='code'><figcaption><span>case/when/end</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">case</span> <span class="n">lang</span>
</span><span class='line'><span class="k">when</span> <span class="s2">&quot;java&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;good&quot;</span>
</span><span class='line'><span class="k">when</span> <span class="s2">&quot;python&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;great!&quot;</span>
</span><span class='line'><span class="k">when</span> <span class="s2">&quot;ruby&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;perfect!&quot;</span>
</span><span class='line'><span class="k">else</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;WTF&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>迴圈</h3>

<p>在ruby中比較少在用for跟while迴圈，大部分情況都使用each(iterator迭代器)</p>

<figure class='code'><figcaption><span>each</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">lang</span> <span class="o">=</span> <span class="o">[</span><span class="s2">&quot;ruby&quot;</span><span class="p">,</span><span class="s2">&quot;python&quot;</span><span class="p">,</span><span class="s2">&quot;java&quot;</span><span class="p">,</span><span class="s2">&quot;c&quot;</span><span class="p">,</span><span class="s2">&quot;php&quot;</span><span class="o">]</span>
</span><span class='line'><span class="k">for</span> <span class="n">i</span> <span class="k">in</span> <span class="n">lang</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="n">i</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">lang</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s1">&#39;I love &#39;</span> <span class="o">+</span> <span class="n">i</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="o">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="o">].</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span> <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="mi">3</span><span class="o">.</span><span class="n">times</span> <span class="k">do</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s1">&#39;Good Job!&#39;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Reference: RailsFun - JokerCatz</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Ruby] 匯出txt檔]]></title>
    <link href="http://blog.poyi.tw/blog/2014/05/06/ruby-txt-file/"/>
    <updated>2014-05-06T22:00:59+08:00</updated>
    <id>http://blog.poyi.tw/blog/2014/05/06/ruby-txt-file</id>
    <content type="html"><![CDATA[<h4>需要在正式環境上撈大量特定資料下來，又不想dump整份database，用ORM來把資料匯出成txt就很方便了</h4>

<figure class='code'><figcaption><span>寫入txt</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">all_users_mobile</span> <span class="o">=</span> <span class="no">User</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="s1">&#39;mobile like ?&#39;</span><span class="p">,</span> <span class="s1">&#39;+8869%&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">select</span><span class="p">(</span><span class="ss">:mobile</span><span class="p">)</span><span class="o">.</span><span class="n">uniq</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 建立txt並給予寫入權限</span>
</span><span class='line'><span class="n">file</span> <span class="o">=</span> <span class="no">File</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="s1">&#39;mobile_tw.txt&#39;</span> <span class="p">,</span> <span class="s1">&#39;w&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">all_users_mobile</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">mobile</span><span class="o">|</span>
</span><span class='line'>  <span class="n">file</span><span class="o">.</span><span class="n">puts</span> <span class="n">mobile</span> <span class="c1"># 一行一筆mobile</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 記得要關掉</span>
</span><span class='line'><span class="n">file</span><span class="o">.</span><span class="n">close</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>讀取txt</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># 讀取txt</span>
</span><span class='line'><span class="n">file</span> <span class="o">=</span> <span class="no">File</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="s1">&#39;mobile_tw.txt&#39;</span> <span class="p">,</span> <span class="s1">&#39;r&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="mi">100</span><span class="o">.</span><span class="n">times</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">file</span><span class="o">.</span><span class="n">readline</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Reference:</p>

<p><a href="http://ruby-doc.org/core-2.1.4/File.html">http://ruby-doc.org/core-2.1.4/File.html</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Ruby] 匯出批次csv檔]]></title>
    <link href="http://blog.poyi.tw/blog/2014/05/06/ruby-csv-file/"/>
    <updated>2014-05-06T21:14:00+08:00</updated>
    <id>http://blog.poyi.tw/blog/2014/05/06/ruby-csv-file</id>
    <content type="html"><![CDATA[<p>讀取或寫入csv在ruby都蠻方便的，只是編碼或格式要稍微注意一下</p>

<h2>匯出csv</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">header</span> <span class="o">=</span> <span class="o">[</span><span class="s1">&#39;name&#39;</span><span class="p">,</span><span class="s1">&#39;money&#39;</span><span class="p">,</span><span class="s1">&#39;age&#39;</span><span class="o">]</span>
</span><span class='line'><span class="n">body</span> <span class="o">=</span> <span class="o">[</span><span class="s1">&#39;ruby&#39;</span><span class="p">,</span><span class="s1">&#39;1000&#39;</span><span class="p">,</span><span class="s1">&#39;18&#39;</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>export_to_csv_string 匯出csv的string格式再利用send_data下載</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="n">head</span> <span class="o">=</span> <span class="s1">&#39;EF BB BF&#39;</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">&#39; &#39;</span><span class="p">)</span><span class="o">.</span><span class="n">map</span><span class="p">{</span><span class="o">|</span><span class="n">a</span><span class="o">|</span><span class="n">a</span><span class="o">.</span><span class="n">hex</span><span class="o">.</span><span class="n">chr</span><span class="p">}</span><span class="o">.</span><span class="n">join</span><span class="p">()</span> <span class="c1"># 加入BOM，解決excel中文亂碼</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>  <span class="n">csv_string</span> <span class="o">=</span> <span class="no">CSV</span><span class="o">.</span><span class="n">generate</span><span class="p">(</span><span class="n">csv</span> <span class="o">=</span> <span class="n">head</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">csv</span><span class="o">|</span>
</span><span class='line'>    <span class="n">csv</span> <span class="o">&lt;&lt;</span> <span class="n">header</span>
</span><span class='line'>    <span class="n">csv</span> <span class="o">&lt;&lt;</span> <span class="n">body</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># &gt; csv_string.encoding 執行這句會發現預設編碼為ACSII</span>
</span><span class='line'>  <span class="n">csv_string</span><span class="o">.</span><span class="n">force_encoding</span><span class="p">(</span><span class="s1">&#39;big5&#39;</span><span class="p">)</span>
</span><span class='line'>  <span class="c1"># BOM也可以這樣加 csv_string = &quot;\xEF\xBB\xBF#{csv_string}&quot;  </span>
</span><span class='line'>  <span class="c1"># 若不需要調整格式就直接下載</span>
</span><span class='line'>  <span class="n">send_data</span> <span class="n">csv_string</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>export_to_csv 直接匯出檔案</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'> <span class="nb">require</span> <span class="s1">&#39;csv&#39;</span>
</span><span class='line'> <span class="no">CSV</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="s2">&quot;export.csv&quot;</span><span class="p">,</span><span class="s2">&quot;w&quot;</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">csv</span><span class="o">|</span>
</span><span class='line'>   <span class="n">csv</span> <span class="o">&lt;&lt;</span> <span class="n">header</span>
</span><span class='line'>   <span class="n">csv</span> <span class="o">&lt;&lt;</span> <span class="n">body</span>
</span><span class='line'> <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h2>半形轉全形</h2>

<p>在某些情況會需要轉出全形字元，照理說不用才對，<del>可能是因為合作對方的系統太爛</del>
其實也不太確定怎解，我單純用硬幹的方式</p>

<figure class='code'><figcaption><span>convert_to_wide_word 大小寫英文數字轉全形字元</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">convert_to_wide_word</span><span class="p">(</span><span class="n">text</span><span class="p">)</span>
</span><span class='line'>  <span class="n">text</span><span class="o">.</span><span class="n">gsub</span><span class="p">(</span><span class="sr">/[a-v]/</span><span class="p">){</span><span class="o">|</span><span class="n">a</span><span class="o">|</span><span class="p">(</span><span class="n">a</span><span class="o">.</span><span class="n">ord</span> <span class="o">+</span> <span class="mi">41608</span><span class="p">)</span><span class="o">.</span><span class="n">chr</span><span class="p">(</span><span class="s1">&#39;big5&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">encode</span><span class="p">(</span><span class="s1">&#39;utf-8&#39;</span><span class="p">)}</span>
</span><span class='line'>    <span class="o">.</span><span class="n">gsub</span><span class="p">(</span><span class="sr">/[w-z]/</span><span class="p">){</span><span class="o">|</span><span class="n">a</span><span class="o">|</span><span class="p">(</span><span class="n">a</span><span class="o">.</span><span class="n">ord</span> <span class="o">+</span> <span class="mi">41673</span><span class="p">)</span><span class="o">.</span><span class="n">chr</span><span class="p">(</span><span class="s1">&#39;big5&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">encode</span><span class="p">(</span><span class="s1">&#39;utf-8&#39;</span><span class="p">)}</span>
</span><span class='line'>    <span class="o">.</span><span class="n">gsub</span><span class="p">(</span><span class="sr">/[A-Z]/</span><span class="p">){</span><span class="o">|</span><span class="n">a</span><span class="o">|</span><span class="p">(</span><span class="n">a</span><span class="o">.</span><span class="n">ord</span> <span class="o">+</span> <span class="mi">41614</span><span class="p">)</span><span class="o">.</span><span class="n">chr</span><span class="p">(</span><span class="s1">&#39;big5&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">encode</span><span class="p">(</span><span class="s1">&#39;utf-8&#39;</span><span class="p">)}</span>
</span><span class='line'>    <span class="o">.</span><span class="n">gsub</span><span class="p">(</span><span class="sr">/[0-9]/</span><span class="p">){</span><span class="o">|</span><span class="n">a</span><span class="o">|</span><span class="p">(</span><span class="n">a</span><span class="o">.</span><span class="n">ord</span> <span class="o">+</span> <span class="mi">41599</span><span class="p">)</span><span class="o">.</span><span class="n">chr</span><span class="p">(</span><span class="s1">&#39;big5&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">encode</span><span class="p">(</span><span class="s1">&#39;utf-8&#39;</span><span class="p">)}</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">convert_to_wide_word</span><span class="p">(</span><span class="s2">&quot;0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;</span><span class="p">)</span>
</span><span class='line'> <span class="o">=&gt;</span> <span class="s2">&quot;０１２３４５６７８９ａｂｃｄｅｆｇｈｉｊｋｌｍｎｏｐｑｒｓｔｕｖｗｘｙｚＡＢＣＤＥＦＧＨＩＪＫＬ</span>
</span><span class='line'><span class="s2"> ＭＮＯＰＱＲＳＴＵＶＷＸＹＺ&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>匯出匯入csv也可以試試FasterCSV這個gem</p>

<p>Reference:</p>

<p><a href="http://www.sitepoint.com/guide-ruby-csv-library-part/">http://www.sitepoint.com/guide-ruby-csv-library-part/</a></p>

<p><a href="http://blog.inheart.tw/2013/09/rubyraisl-csv-excel.html">http://blog.inheart.tw/2013/09/rubyraisl-csv-excel.html</a></p>

<p><a href="http://salayhin.wordpress.com/2014/05/10/export-csv-file-from-rails-console/">http://salayhin.wordpress.com/2014/05/10/export-csv-file-from-rails-console/</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Ruby] require,load,include,extend]]></title>
    <link href="http://blog.poyi.tw/blog/2014/03/16/ruby-require-load-include-extend/"/>
    <updated>2014-03-16T21:14:00+08:00</updated>
    <id>http://blog.poyi.tw/blog/2014/03/16/ruby-require-load-include-extend</id>
    <content type="html"><![CDATA[<h2>require vs load</h2>

<p>首先require與load都是用來載入指定的檔案
差別在於使用require只會調用一次，且副檔名可省略，load則相反。</p>

<figure class='code'><figcaption><span>random.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="vg">$a</span> <span class="o">=</span> <span class="p">(</span><span class="nb">rand</span> <span class="o">*</span> <span class="mi">10</span><span class="p">)</span><span class="o">.</span><span class="n">floor</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>use_require.rb 產出的兩個值相同(只載入一次random.rb)</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s2">&quot;./random&quot;</span>
</span><span class='line'><span class="nb">puts</span> <span class="vg">$a</span>
</span><span class='line'><span class="nb">require</span> <span class="s2">&quot;./random&quot;</span> <span class="c1"># 此行無效果</span>
</span><span class='line'><span class="nb">puts</span> <span class="vg">$a</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>use_load.rb 產生的兩個值不一定相同</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">load</span> <span class="s2">&quot;./random.rb&quot;</span>
</span><span class='line'><span class="nb">puts</span> <span class="vg">$a</span>
</span><span class='line'><span class="nb">load</span> <span class="s2">&quot;./random.rb&quot;</span>
</span><span class='line'><span class="nb">puts</span> <span class="vg">$a</span>
</span></code></pre></td></tr></table></div></figure>


<hr />

<h2>include vs extend</h2>

<p>include: 將目標當作instance來使用；並不直接擁有method，需建立一個實例後才能用
extend: 相當於把目標的code直接放進來；具有目標的class methods</p>

<figure class='code'><figcaption><span>include_extend.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">Say</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">say_hi</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;Hi!&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">People</span>
</span><span class='line'>  <span class="kp">include</span> <span class="no">Say</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Person</span>
</span><span class='line'>  <span class="kp">extend</span> <span class="no">Say</span> <span class="c1"># 具有Say的method，可直接呼叫</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>irb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="m">001</span> &gt; require <span class="s1">&#39;./include_extend.rb&#39;</span>
</span><span class='line'> <span class="o">=</span>&gt; <span class="nb">true </span>
</span><span class='line'><span class="m">002</span> &gt; Person.say_hi
</span><span class='line'>Hi!
</span><span class='line'> <span class="o">=</span>&gt; nil
</span><span class='line'><span class="m">003</span> &gt; People.new.say_hi
</span><span class='line'>Hi!
</span><span class='line'> <span class="o">=</span>&gt; nil
</span></code></pre></td></tr></table></div></figure>


<p>Reference:</p>

<p><a href="http://www.slideshare.net/BruceLi2/rubypart2">http://www.slideshare.net/BruceLi2/rubypart2</a></p>

<p><a href="http://cat-son.blogspot.tw/2012/10/2-rubyinclude-extendrequire.html#sthash.QduzPsMe.cFJYqpMb.dpbs">http://cat-son.blogspot.tw/2012/10/2-rubyinclude-extendrequire.html#sthash.QduzPsMe.cFJYqpMb.dpbs</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Mac] 直接在終端機開啟sublime]]></title>
    <link href="http://blog.poyi.tw/blog/2014/01/19/mac-directly-in-the-terminal-to-open-sublime/"/>
    <updated>2014-01-19T04:31:00+08:00</updated>
    <id>http://blog.poyi.tw/blog/2014/01/19/mac-directly-in-the-terminal-to-open-sublime</id>
    <content type="html"><![CDATA[<p>應該有更方便的用法吧我想，但目前對我來說算好用了:D</p>

<figure class='code'><figcaption><span>執行這行指令</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ln -s /Applications/Sublime<span class="se">\ </span>Text<span class="se">\ </span>2.app/Contents/SharedSupport/bin/subl /usr/local/bin/sublime
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>執行這行指令</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>open id_rsa.pub
</span><span class='line'>No application knows how to open /Users/Bob/.ssh/id_rsa.pub.
</span><span class='line'><span class="nv">$ </span>ln -s /Applications/Sublime<span class="se">\ </span>Text<span class="se">\ </span>2.app/Contents/SharedSupport/bin/subl /usr/local/bin/sublime
</span><span class='line'><span class="nv">$ </span>sublime id_rsa.pub
</span></code></pre></td></tr></table></div></figure>


<p>Reference:</p>

<p><a href="http://jocoomadao.blogspot.tw/2013/11/macterminal-sublime.html">http://jocoomadao.blogspot.tw/2013/11/macterminal-sublime.html</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Mac] Ruby on Rails 基本環境建置]]></title>
    <link href="http://blog.poyi.tw/blog/2014/01/17/rails-mac-os-environment-build/"/>
    <updated>2014-01-17T12:47:00+08:00</updated>
    <id>http://blog.poyi.tw/blog/2014/01/17/rails-mac-os-environment-build</id>
    <content type="html"><![CDATA[<p>是說終於買了mac，省去開箱文趕緊把環境用好來繼續練習ROR!!
但使用上還是有一點不習慣，會覺得有些地方也蠻不人性化，但相對穩定就是了</p>

<h2>以下環境為OS X 10.9.1</h2>

<p>1.安裝xcode-select
Command line tool已經獨立出來，不需要安裝XCode了</p>

<figure class='code'><figcaption><span>terminal</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>xcode-select --install
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://user-image.logdown.io/user/2740/blog/2734/post/176032/wrVy25UMQkeJEnuNKSEq_%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%202014-01-17%20%E4%B8%8B%E5%8D%889.07.40.png" alt="螢幕快照 2014-01-17 下午9.07.40.png" /></p>

<p>如果安裝失敗的話也可以到<a href="https://developer.apple.com/downloads/index.action?q=xcode">這裡</a>下載
<img src="http://user-image.logdown.io/user/2740/blog/2734/post/176032/umDZbcPSNWfhQ0VNDr7l_%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%202014-01-17%20%E4%B8%8B%E5%8D%8810.01.05.png" alt="螢幕快照 2014-01-17 下午10.01.05.png" /></p>

<p>2.安裝homebrew</p>

<figure class='code'><figcaption><span>terminal</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ruby -e <span class="s2">&quot;$(curl -fsSL https://raw.github.com/mxcl/homebrew/go/install)&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>3.安裝所需要的工具</p>

<figure class='code'><figcaption><span>terminal</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>brew install git
</span></code></pre></td></tr></table></div></figure>


<p>4.安裝RVM</p>

<figure class='code'><figcaption><span>terminal</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>curl -L https://get.rvm.io <span class="p">|</span> bash -s stable
</span></code></pre></td></tr></table></div></figure>


<p>5.透過RVM來安裝RUBY</p>

<figure class='code'><figcaption><span>terminal</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rvm install ruby
</span></code></pre></td></tr></table></div></figure>


<p>6.透過RVM來安裝RubyGems</p>

<figure class='code'><figcaption><span>terminal</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rvm rubygems current
</span></code></pre></td></tr></table></div></figure>


<p>7.安裝Rails</p>

<figure class='code'><figcaption><span>terminal</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>gem install rails
</span></code></pre></td></tr></table></div></figure>


<hr />

<p>XCode:官方提供的一個IDE，主要用來開發IOS APP，不過它也包含了一些開發其他語言所需的環境
Homebrew: OSX 套件管理工具
RVM (Ruby Version Manager):Ruby版本管理工具，便於切換不同版本</p>

<p>Reference:</p>

<p><a href="http://www.computersnyou.com/2025/2013/06/install-command-line-tools-in-osx-10-9-mavericks-how-to/">http://www.computersnyou.com/2025/2013/06/install-command-line-tools-in-osx-10-9-mavericks-how-to/</a>
<a href="http://www.slideshare.net/marsz330/ruby-on-rails-for-mac">http://www.slideshare.net/marsz330/ruby-on-rails-for-mac</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[JavaScript] 中斷事件或動作的觸發]]></title>
    <link href="http://blog.poyi.tw/blog/2014/01/13/javascript-triggered-interrupt-event-or-action/"/>
    <updated>2014-01-13T14:00:00+08:00</updated>
    <id>http://blog.poyi.tw/blog/2014/01/13/javascript-triggered-interrupt-event-or-action</id>
    <content type="html"><![CDATA[<h1>bubble up 冒泡</h1>

<p>當底層的元件被觸發時，會將所屬的父元件會連帶被觸發 - 多層觸發
而要處理這問題通常會用到 stopPropagation() 或 preventDefault()</p>

<h2>stopPropagation()</h2>

<p>停止向上層bubble up，但仍然會觸發browser
看例子比較快 <a href="http://jsfiddle.net/dA6R3/1/">http://jsfiddle.net/dA6R3/1/</a></p>

<figure class='code'><figcaption><span>加入event.stopPropagation(); 當點擊下去時，就不會向上觸發其他動作</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;p&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;a&quot;</span><span class="nt">&gt;&lt;/div&gt;</span>
</span><span class='line'><span class="nt">&lt;/div&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;script&gt;</span>
</span><span class='line'><span class="nx">$</span><span class="p">(</span><span class="s2">&quot;.p&quot;</span><span class="p">).</span><span class="nx">click</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">event</span><span class="p">){</span>
</span><span class='line'>    <span class="nx">alert</span><span class="p">(</span><span class="s2">&quot;p 外&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">});</span>
</span><span class='line'>
</span><span class='line'><span class="nx">$</span><span class="p">(</span><span class="s2">&quot;.a&quot;</span><span class="p">).</span><span class="nx">click</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">event</span><span class="p">){</span>
</span><span class='line'>    <span class="nx">alert</span><span class="p">(</span><span class="s2">&quot;a 內&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="nx">event</span><span class="p">.</span><span class="nx">stopPropagation</span><span class="p">();</span>
</span><span class='line'><span class="p">});</span>
</span><span class='line'><span class="nt">&lt;/script&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>preventDefault()</h2>

<p>會將預設的動作停掉不讓它執行，不會觸發browser
看例子比較快 <a href="http://jsfiddle.net/88dcF/1/">http://jsfiddle.net/88dcF/1/</a></p>

<figure class='code'><figcaption><span>加入event.preventDefault(); 當點擊下去時，就不會執行預設動作(連到GOOGLE)</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;http://www.google.com&quot;</span><span class="nt">&gt;</span>go to google<span class="nt">&lt;/a&gt;</span>
</span><span class='line'><span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">&quot;check&quot;</span><span class="nt">&gt;&lt;/div&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;script&gt;</span>
</span><span class='line'><span class="nx">$</span><span class="p">(</span><span class="s2">&quot;a&quot;</span><span class="p">).</span><span class="nx">click</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">event</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">event</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">();</span>
</span><span class='line'>  <span class="nx">$</span><span class="p">(</span><span class="s2">&quot;&lt;div&gt;&quot;</span><span class="p">).</span><span class="nx">append</span><span class="p">(</span><span class="s2">&quot;Ya&quot;</span><span class="p">).</span><span class="nx">appendTo</span><span class="p">(</span><span class="s2">&quot;#check&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">});</span>
</span><span class='line'><span class="nt">&lt;/script&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Reference:</p>

<p><a href="http://www.neoease.com/stoppropagation-and-preventdefault-and-return-false/">http://www.neoease.com/stoppropagation-and-preventdefault-and-return-false/</a></p>

<p><a href="http://yiyingloveart.blogspot.tw/2013/08/eventpreventdefaultreturn-false.html">http://yiyingloveart.blogspot.tw/2013/08/eventpreventdefaultreturn-false.html</a></p>
]]></content>
  </entry>
  
</feed>
